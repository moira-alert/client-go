// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/validate"
)

// MoiraDayName moira day name
//
// swagger:model moira.DayName
type MoiraDayName string

func NewMoiraDayName(value MoiraDayName) *MoiraDayName {
	return &value
}

// Pointer returns a pointer to a freshly-allocated MoiraDayName.
func (m MoiraDayName) Pointer() *MoiraDayName {
	return &m
}

const (

	// MoiraDayNameMon captures enum value "Mon"
	MoiraDayNameMon MoiraDayName = "Mon"

	// MoiraDayNameTue captures enum value "Tue"
	MoiraDayNameTue MoiraDayName = "Tue"

	// MoiraDayNameWed captures enum value "Wed"
	MoiraDayNameWed MoiraDayName = "Wed"

	// MoiraDayNameThu captures enum value "Thu"
	MoiraDayNameThu MoiraDayName = "Thu"

	// MoiraDayNameFri captures enum value "Fri"
	MoiraDayNameFri MoiraDayName = "Fri"

	// MoiraDayNameSat captures enum value "Sat"
	MoiraDayNameSat MoiraDayName = "Sat"

	// MoiraDayNameSun captures enum value "Sun"
	MoiraDayNameSun MoiraDayName = "Sun"
)

// for schema
var moiraDayNameEnum []interface{}

func init() {
	var res []MoiraDayName
	if err := json.Unmarshal([]byte(`["Mon","Tue","Wed","Thu","Fri","Sat","Sun"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		moiraDayNameEnum = append(moiraDayNameEnum, v)
	}
}

func (m MoiraDayName) validateMoiraDayNameEnum(path, location string, value MoiraDayName) error {
	if err := validate.EnumCase(path, location, value, moiraDayNameEnum, true); err != nil {
		return err
	}
	return nil
}

// Validate validates this moira day name
func (m MoiraDayName) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateMoiraDayNameEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// ContextValidate validates this moira day name based on context it is used
func (m MoiraDayName) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}
