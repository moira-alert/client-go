// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// MoiraEventInfo moira event info
//
// swagger:model moira.EventInfo
type MoiraEventInfo struct {

	// interval
	// Example: 0
	Interval *int64 `json:"interval,omitempty"`

	// maintenance
	Maintenance struct {
		MoiraMaintenanceInfo
	} `json:"maintenance,omitempty"`
}

// Validate validates this moira event info
func (m *MoiraEventInfo) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateMaintenance(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *MoiraEventInfo) validateMaintenance(formats strfmt.Registry) error {
	if swag.IsZero(m.Maintenance) { // not required
		return nil
	}

	return nil
}

// ContextValidate validate this moira event info based on the context it is used
func (m *MoiraEventInfo) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := m.contextValidateMaintenance(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *MoiraEventInfo) contextValidateMaintenance(ctx context.Context, formats strfmt.Registry) error {

	return nil
}

// MarshalBinary interface implementation
func (m *MoiraEventInfo) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *MoiraEventInfo) UnmarshalBinary(b []byte) error {
	var res MoiraEventInfo
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
