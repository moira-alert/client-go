// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// APIFeatureFlags api feature flags
//
// swagger:model api.FeatureFlags
type APIFeatureFlags struct {

	// is plotting available
	// Example: true
	IsPlottingAvailable bool `json:"isPlottingAvailable,omitempty"`

	// is plotting default on
	// Example: false
	IsPlottingDefaultOn bool `json:"isPlottingDefaultOn,omitempty"`

	// is readonly enabled
	// Example: false
	IsReadonlyEnabled bool `json:"isReadonlyEnabled,omitempty"`

	// is subscription to all tags available
	// Example: false
	IsSubscriptionToAllTagsAvailable bool `json:"isSubscriptionToAllTagsAvailable,omitempty"`
}

// Validate validates this api feature flags
func (m *APIFeatureFlags) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this api feature flags based on context it is used
func (m *APIFeatureFlags) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *APIFeatureFlags) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *APIFeatureFlags) UnmarshalBinary(b []byte) error {
	var res APIFeatureFlags
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
