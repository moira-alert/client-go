// Code generated by go-swagger; DO NOT EDIT.

package health

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/moira-alert/client-go/pkg/models"
)

// GetNotifierStateReader is a Reader for the GetNotifierState structure.
type GetNotifierStateReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetNotifierStateReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetNotifierStateOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 422:
		result := NewGetNotifierStateUnprocessableEntity()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetNotifierStateInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /health/notifier] get-notifier-state", response, response.Code())
	}
}

// NewGetNotifierStateOK creates a GetNotifierStateOK with default headers values
func NewGetNotifierStateOK() *GetNotifierStateOK {
	return &GetNotifierStateOK{}
}

/*
GetNotifierStateOK describes a response with status code 200, with default header values.

Notifier state retrieved
*/
type GetNotifierStateOK struct {
	Payload *models.DtoNotifierState
}

// IsSuccess returns true when this get notifier state o k response has a 2xx status code
func (o *GetNotifierStateOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get notifier state o k response has a 3xx status code
func (o *GetNotifierStateOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get notifier state o k response has a 4xx status code
func (o *GetNotifierStateOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get notifier state o k response has a 5xx status code
func (o *GetNotifierStateOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get notifier state o k response a status code equal to that given
func (o *GetNotifierStateOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get notifier state o k response
func (o *GetNotifierStateOK) Code() int {
	return 200
}

func (o *GetNotifierStateOK) Error() string {
	return fmt.Sprintf("[GET /health/notifier][%d] getNotifierStateOK  %+v", 200, o.Payload)
}

func (o *GetNotifierStateOK) String() string {
	return fmt.Sprintf("[GET /health/notifier][%d] getNotifierStateOK  %+v", 200, o.Payload)
}

func (o *GetNotifierStateOK) GetPayload() *models.DtoNotifierState {
	return o.Payload
}

func (o *GetNotifierStateOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.DtoNotifierState)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetNotifierStateUnprocessableEntity creates a GetNotifierStateUnprocessableEntity with default headers values
func NewGetNotifierStateUnprocessableEntity() *GetNotifierStateUnprocessableEntity {
	return &GetNotifierStateUnprocessableEntity{}
}

/*
GetNotifierStateUnprocessableEntity describes a response with status code 422, with default header values.

Render error
*/
type GetNotifierStateUnprocessableEntity struct {
	Payload *models.APIErrorRenderExample
}

// IsSuccess returns true when this get notifier state unprocessable entity response has a 2xx status code
func (o *GetNotifierStateUnprocessableEntity) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get notifier state unprocessable entity response has a 3xx status code
func (o *GetNotifierStateUnprocessableEntity) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get notifier state unprocessable entity response has a 4xx status code
func (o *GetNotifierStateUnprocessableEntity) IsClientError() bool {
	return true
}

// IsServerError returns true when this get notifier state unprocessable entity response has a 5xx status code
func (o *GetNotifierStateUnprocessableEntity) IsServerError() bool {
	return false
}

// IsCode returns true when this get notifier state unprocessable entity response a status code equal to that given
func (o *GetNotifierStateUnprocessableEntity) IsCode(code int) bool {
	return code == 422
}

// Code gets the status code for the get notifier state unprocessable entity response
func (o *GetNotifierStateUnprocessableEntity) Code() int {
	return 422
}

func (o *GetNotifierStateUnprocessableEntity) Error() string {
	return fmt.Sprintf("[GET /health/notifier][%d] getNotifierStateUnprocessableEntity  %+v", 422, o.Payload)
}

func (o *GetNotifierStateUnprocessableEntity) String() string {
	return fmt.Sprintf("[GET /health/notifier][%d] getNotifierStateUnprocessableEntity  %+v", 422, o.Payload)
}

func (o *GetNotifierStateUnprocessableEntity) GetPayload() *models.APIErrorRenderExample {
	return o.Payload
}

func (o *GetNotifierStateUnprocessableEntity) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIErrorRenderExample)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetNotifierStateInternalServerError creates a GetNotifierStateInternalServerError with default headers values
func NewGetNotifierStateInternalServerError() *GetNotifierStateInternalServerError {
	return &GetNotifierStateInternalServerError{}
}

/*
GetNotifierStateInternalServerError describes a response with status code 500, with default header values.

Internal server error
*/
type GetNotifierStateInternalServerError struct {
	Payload *models.APIErrorInternalServerExample
}

// IsSuccess returns true when this get notifier state internal server error response has a 2xx status code
func (o *GetNotifierStateInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get notifier state internal server error response has a 3xx status code
func (o *GetNotifierStateInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get notifier state internal server error response has a 4xx status code
func (o *GetNotifierStateInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get notifier state internal server error response has a 5xx status code
func (o *GetNotifierStateInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get notifier state internal server error response a status code equal to that given
func (o *GetNotifierStateInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the get notifier state internal server error response
func (o *GetNotifierStateInternalServerError) Code() int {
	return 500
}

func (o *GetNotifierStateInternalServerError) Error() string {
	return fmt.Sprintf("[GET /health/notifier][%d] getNotifierStateInternalServerError  %+v", 500, o.Payload)
}

func (o *GetNotifierStateInternalServerError) String() string {
	return fmt.Sprintf("[GET /health/notifier][%d] getNotifierStateInternalServerError  %+v", 500, o.Payload)
}

func (o *GetNotifierStateInternalServerError) GetPayload() *models.APIErrorInternalServerExample {
	return o.Payload
}

func (o *GetNotifierStateInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIErrorInternalServerExample)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
