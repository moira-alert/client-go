// Code generated by go-swagger; DO NOT EDIT.

package health

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/moira-alert/client-go/pkg/models"
)

// SetNotifierStateReader is a Reader for the SetNotifierState structure.
type SetNotifierStateReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *SetNotifierStateReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewSetNotifierStateOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 403:
		result := NewSetNotifierStateForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 422:
		result := NewSetNotifierStateUnprocessableEntity()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewSetNotifierStateInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[PUT /health/notifier] set-notifier-state", response, response.Code())
	}
}

// NewSetNotifierStateOK creates a SetNotifierStateOK with default headers values
func NewSetNotifierStateOK() *SetNotifierStateOK {
	return &SetNotifierStateOK{}
}

/*
SetNotifierStateOK describes a response with status code 200, with default header values.

Notifier state retrieved
*/
type SetNotifierStateOK struct {
	Payload *models.DtoNotifierState
}

// IsSuccess returns true when this set notifier state o k response has a 2xx status code
func (o *SetNotifierStateOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this set notifier state o k response has a 3xx status code
func (o *SetNotifierStateOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this set notifier state o k response has a 4xx status code
func (o *SetNotifierStateOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this set notifier state o k response has a 5xx status code
func (o *SetNotifierStateOK) IsServerError() bool {
	return false
}

// IsCode returns true when this set notifier state o k response a status code equal to that given
func (o *SetNotifierStateOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the set notifier state o k response
func (o *SetNotifierStateOK) Code() int {
	return 200
}

func (o *SetNotifierStateOK) Error() string {
	return fmt.Sprintf("[PUT /health/notifier][%d] setNotifierStateOK  %+v", 200, o.Payload)
}

func (o *SetNotifierStateOK) String() string {
	return fmt.Sprintf("[PUT /health/notifier][%d] setNotifierStateOK  %+v", 200, o.Payload)
}

func (o *SetNotifierStateOK) GetPayload() *models.DtoNotifierState {
	return o.Payload
}

func (o *SetNotifierStateOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.DtoNotifierState)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSetNotifierStateForbidden creates a SetNotifierStateForbidden with default headers values
func NewSetNotifierStateForbidden() *SetNotifierStateForbidden {
	return &SetNotifierStateForbidden{}
}

/*
SetNotifierStateForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type SetNotifierStateForbidden struct {
	Payload *models.APIErrorForbiddenExample
}

// IsSuccess returns true when this set notifier state forbidden response has a 2xx status code
func (o *SetNotifierStateForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this set notifier state forbidden response has a 3xx status code
func (o *SetNotifierStateForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this set notifier state forbidden response has a 4xx status code
func (o *SetNotifierStateForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this set notifier state forbidden response has a 5xx status code
func (o *SetNotifierStateForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this set notifier state forbidden response a status code equal to that given
func (o *SetNotifierStateForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the set notifier state forbidden response
func (o *SetNotifierStateForbidden) Code() int {
	return 403
}

func (o *SetNotifierStateForbidden) Error() string {
	return fmt.Sprintf("[PUT /health/notifier][%d] setNotifierStateForbidden  %+v", 403, o.Payload)
}

func (o *SetNotifierStateForbidden) String() string {
	return fmt.Sprintf("[PUT /health/notifier][%d] setNotifierStateForbidden  %+v", 403, o.Payload)
}

func (o *SetNotifierStateForbidden) GetPayload() *models.APIErrorForbiddenExample {
	return o.Payload
}

func (o *SetNotifierStateForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIErrorForbiddenExample)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSetNotifierStateUnprocessableEntity creates a SetNotifierStateUnprocessableEntity with default headers values
func NewSetNotifierStateUnprocessableEntity() *SetNotifierStateUnprocessableEntity {
	return &SetNotifierStateUnprocessableEntity{}
}

/*
SetNotifierStateUnprocessableEntity describes a response with status code 422, with default header values.

Render error
*/
type SetNotifierStateUnprocessableEntity struct {
	Payload *models.APIErrorRenderExample
}

// IsSuccess returns true when this set notifier state unprocessable entity response has a 2xx status code
func (o *SetNotifierStateUnprocessableEntity) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this set notifier state unprocessable entity response has a 3xx status code
func (o *SetNotifierStateUnprocessableEntity) IsRedirect() bool {
	return false
}

// IsClientError returns true when this set notifier state unprocessable entity response has a 4xx status code
func (o *SetNotifierStateUnprocessableEntity) IsClientError() bool {
	return true
}

// IsServerError returns true when this set notifier state unprocessable entity response has a 5xx status code
func (o *SetNotifierStateUnprocessableEntity) IsServerError() bool {
	return false
}

// IsCode returns true when this set notifier state unprocessable entity response a status code equal to that given
func (o *SetNotifierStateUnprocessableEntity) IsCode(code int) bool {
	return code == 422
}

// Code gets the status code for the set notifier state unprocessable entity response
func (o *SetNotifierStateUnprocessableEntity) Code() int {
	return 422
}

func (o *SetNotifierStateUnprocessableEntity) Error() string {
	return fmt.Sprintf("[PUT /health/notifier][%d] setNotifierStateUnprocessableEntity  %+v", 422, o.Payload)
}

func (o *SetNotifierStateUnprocessableEntity) String() string {
	return fmt.Sprintf("[PUT /health/notifier][%d] setNotifierStateUnprocessableEntity  %+v", 422, o.Payload)
}

func (o *SetNotifierStateUnprocessableEntity) GetPayload() *models.APIErrorRenderExample {
	return o.Payload
}

func (o *SetNotifierStateUnprocessableEntity) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIErrorRenderExample)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSetNotifierStateInternalServerError creates a SetNotifierStateInternalServerError with default headers values
func NewSetNotifierStateInternalServerError() *SetNotifierStateInternalServerError {
	return &SetNotifierStateInternalServerError{}
}

/*
SetNotifierStateInternalServerError describes a response with status code 500, with default header values.

Internal server error
*/
type SetNotifierStateInternalServerError struct {
	Payload *models.APIErrorInternalServerExample
}

// IsSuccess returns true when this set notifier state internal server error response has a 2xx status code
func (o *SetNotifierStateInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this set notifier state internal server error response has a 3xx status code
func (o *SetNotifierStateInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this set notifier state internal server error response has a 4xx status code
func (o *SetNotifierStateInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this set notifier state internal server error response has a 5xx status code
func (o *SetNotifierStateInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this set notifier state internal server error response a status code equal to that given
func (o *SetNotifierStateInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the set notifier state internal server error response
func (o *SetNotifierStateInternalServerError) Code() int {
	return 500
}

func (o *SetNotifierStateInternalServerError) Error() string {
	return fmt.Sprintf("[PUT /health/notifier][%d] setNotifierStateInternalServerError  %+v", 500, o.Payload)
}

func (o *SetNotifierStateInternalServerError) String() string {
	return fmt.Sprintf("[PUT /health/notifier][%d] setNotifierStateInternalServerError  %+v", 500, o.Payload)
}

func (o *SetNotifierStateInternalServerError) GetPayload() *models.APIErrorInternalServerExample {
	return o.Payload
}

func (o *SetNotifierStateInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIErrorInternalServerExample)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
