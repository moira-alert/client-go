// Code generated by go-swagger; DO NOT EDIT.

package team_subscription

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/moira-alert/client-go/pkg/models"
)

// CreateNewTeamSubscriptionReader is a Reader for the CreateNewTeamSubscription structure.
type CreateNewTeamSubscriptionReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *CreateNewTeamSubscriptionReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewCreateNewTeamSubscriptionOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewCreateNewTeamSubscriptionBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewCreateNewTeamSubscriptionForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewCreateNewTeamSubscriptionNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 422:
		result := NewCreateNewTeamSubscriptionUnprocessableEntity()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewCreateNewTeamSubscriptionInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /teams/{teamID}/subscriptions] create-new-team-subscription", response, response.Code())
	}
}

// NewCreateNewTeamSubscriptionOK creates a CreateNewTeamSubscriptionOK with default headers values
func NewCreateNewTeamSubscriptionOK() *CreateNewTeamSubscriptionOK {
	return &CreateNewTeamSubscriptionOK{}
}

/*
CreateNewTeamSubscriptionOK describes a response with status code 200, with default header values.

Team subscription created successfully
*/
type CreateNewTeamSubscriptionOK struct {
	Payload *models.DtoSubscription
}

// IsSuccess returns true when this create new team subscription o k response has a 2xx status code
func (o *CreateNewTeamSubscriptionOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this create new team subscription o k response has a 3xx status code
func (o *CreateNewTeamSubscriptionOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create new team subscription o k response has a 4xx status code
func (o *CreateNewTeamSubscriptionOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this create new team subscription o k response has a 5xx status code
func (o *CreateNewTeamSubscriptionOK) IsServerError() bool {
	return false
}

// IsCode returns true when this create new team subscription o k response a status code equal to that given
func (o *CreateNewTeamSubscriptionOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the create new team subscription o k response
func (o *CreateNewTeamSubscriptionOK) Code() int {
	return 200
}

func (o *CreateNewTeamSubscriptionOK) Error() string {
	return fmt.Sprintf("[POST /teams/{teamID}/subscriptions][%d] createNewTeamSubscriptionOK  %+v", 200, o.Payload)
}

func (o *CreateNewTeamSubscriptionOK) String() string {
	return fmt.Sprintf("[POST /teams/{teamID}/subscriptions][%d] createNewTeamSubscriptionOK  %+v", 200, o.Payload)
}

func (o *CreateNewTeamSubscriptionOK) GetPayload() *models.DtoSubscription {
	return o.Payload
}

func (o *CreateNewTeamSubscriptionOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.DtoSubscription)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateNewTeamSubscriptionBadRequest creates a CreateNewTeamSubscriptionBadRequest with default headers values
func NewCreateNewTeamSubscriptionBadRequest() *CreateNewTeamSubscriptionBadRequest {
	return &CreateNewTeamSubscriptionBadRequest{}
}

/*
CreateNewTeamSubscriptionBadRequest describes a response with status code 400, with default header values.

Bad request from client
*/
type CreateNewTeamSubscriptionBadRequest struct {
	Payload *models.APIErrorInvalidRequestExample
}

// IsSuccess returns true when this create new team subscription bad request response has a 2xx status code
func (o *CreateNewTeamSubscriptionBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create new team subscription bad request response has a 3xx status code
func (o *CreateNewTeamSubscriptionBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create new team subscription bad request response has a 4xx status code
func (o *CreateNewTeamSubscriptionBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this create new team subscription bad request response has a 5xx status code
func (o *CreateNewTeamSubscriptionBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this create new team subscription bad request response a status code equal to that given
func (o *CreateNewTeamSubscriptionBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the create new team subscription bad request response
func (o *CreateNewTeamSubscriptionBadRequest) Code() int {
	return 400
}

func (o *CreateNewTeamSubscriptionBadRequest) Error() string {
	return fmt.Sprintf("[POST /teams/{teamID}/subscriptions][%d] createNewTeamSubscriptionBadRequest  %+v", 400, o.Payload)
}

func (o *CreateNewTeamSubscriptionBadRequest) String() string {
	return fmt.Sprintf("[POST /teams/{teamID}/subscriptions][%d] createNewTeamSubscriptionBadRequest  %+v", 400, o.Payload)
}

func (o *CreateNewTeamSubscriptionBadRequest) GetPayload() *models.APIErrorInvalidRequestExample {
	return o.Payload
}

func (o *CreateNewTeamSubscriptionBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIErrorInvalidRequestExample)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateNewTeamSubscriptionForbidden creates a CreateNewTeamSubscriptionForbidden with default headers values
func NewCreateNewTeamSubscriptionForbidden() *CreateNewTeamSubscriptionForbidden {
	return &CreateNewTeamSubscriptionForbidden{}
}

/*
CreateNewTeamSubscriptionForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type CreateNewTeamSubscriptionForbidden struct {
	Payload *models.APIErrorForbiddenExample
}

// IsSuccess returns true when this create new team subscription forbidden response has a 2xx status code
func (o *CreateNewTeamSubscriptionForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create new team subscription forbidden response has a 3xx status code
func (o *CreateNewTeamSubscriptionForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create new team subscription forbidden response has a 4xx status code
func (o *CreateNewTeamSubscriptionForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this create new team subscription forbidden response has a 5xx status code
func (o *CreateNewTeamSubscriptionForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this create new team subscription forbidden response a status code equal to that given
func (o *CreateNewTeamSubscriptionForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the create new team subscription forbidden response
func (o *CreateNewTeamSubscriptionForbidden) Code() int {
	return 403
}

func (o *CreateNewTeamSubscriptionForbidden) Error() string {
	return fmt.Sprintf("[POST /teams/{teamID}/subscriptions][%d] createNewTeamSubscriptionForbidden  %+v", 403, o.Payload)
}

func (o *CreateNewTeamSubscriptionForbidden) String() string {
	return fmt.Sprintf("[POST /teams/{teamID}/subscriptions][%d] createNewTeamSubscriptionForbidden  %+v", 403, o.Payload)
}

func (o *CreateNewTeamSubscriptionForbidden) GetPayload() *models.APIErrorForbiddenExample {
	return o.Payload
}

func (o *CreateNewTeamSubscriptionForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIErrorForbiddenExample)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateNewTeamSubscriptionNotFound creates a CreateNewTeamSubscriptionNotFound with default headers values
func NewCreateNewTeamSubscriptionNotFound() *CreateNewTeamSubscriptionNotFound {
	return &CreateNewTeamSubscriptionNotFound{}
}

/*
CreateNewTeamSubscriptionNotFound describes a response with status code 404, with default header values.

Resource not found
*/
type CreateNewTeamSubscriptionNotFound struct {
	Payload *models.APIErrorNotFoundExample
}

// IsSuccess returns true when this create new team subscription not found response has a 2xx status code
func (o *CreateNewTeamSubscriptionNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create new team subscription not found response has a 3xx status code
func (o *CreateNewTeamSubscriptionNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create new team subscription not found response has a 4xx status code
func (o *CreateNewTeamSubscriptionNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this create new team subscription not found response has a 5xx status code
func (o *CreateNewTeamSubscriptionNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this create new team subscription not found response a status code equal to that given
func (o *CreateNewTeamSubscriptionNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the create new team subscription not found response
func (o *CreateNewTeamSubscriptionNotFound) Code() int {
	return 404
}

func (o *CreateNewTeamSubscriptionNotFound) Error() string {
	return fmt.Sprintf("[POST /teams/{teamID}/subscriptions][%d] createNewTeamSubscriptionNotFound  %+v", 404, o.Payload)
}

func (o *CreateNewTeamSubscriptionNotFound) String() string {
	return fmt.Sprintf("[POST /teams/{teamID}/subscriptions][%d] createNewTeamSubscriptionNotFound  %+v", 404, o.Payload)
}

func (o *CreateNewTeamSubscriptionNotFound) GetPayload() *models.APIErrorNotFoundExample {
	return o.Payload
}

func (o *CreateNewTeamSubscriptionNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIErrorNotFoundExample)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateNewTeamSubscriptionUnprocessableEntity creates a CreateNewTeamSubscriptionUnprocessableEntity with default headers values
func NewCreateNewTeamSubscriptionUnprocessableEntity() *CreateNewTeamSubscriptionUnprocessableEntity {
	return &CreateNewTeamSubscriptionUnprocessableEntity{}
}

/*
CreateNewTeamSubscriptionUnprocessableEntity describes a response with status code 422, with default header values.

Render error
*/
type CreateNewTeamSubscriptionUnprocessableEntity struct {
	Payload *models.APIErrorRenderExample
}

// IsSuccess returns true when this create new team subscription unprocessable entity response has a 2xx status code
func (o *CreateNewTeamSubscriptionUnprocessableEntity) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create new team subscription unprocessable entity response has a 3xx status code
func (o *CreateNewTeamSubscriptionUnprocessableEntity) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create new team subscription unprocessable entity response has a 4xx status code
func (o *CreateNewTeamSubscriptionUnprocessableEntity) IsClientError() bool {
	return true
}

// IsServerError returns true when this create new team subscription unprocessable entity response has a 5xx status code
func (o *CreateNewTeamSubscriptionUnprocessableEntity) IsServerError() bool {
	return false
}

// IsCode returns true when this create new team subscription unprocessable entity response a status code equal to that given
func (o *CreateNewTeamSubscriptionUnprocessableEntity) IsCode(code int) bool {
	return code == 422
}

// Code gets the status code for the create new team subscription unprocessable entity response
func (o *CreateNewTeamSubscriptionUnprocessableEntity) Code() int {
	return 422
}

func (o *CreateNewTeamSubscriptionUnprocessableEntity) Error() string {
	return fmt.Sprintf("[POST /teams/{teamID}/subscriptions][%d] createNewTeamSubscriptionUnprocessableEntity  %+v", 422, o.Payload)
}

func (o *CreateNewTeamSubscriptionUnprocessableEntity) String() string {
	return fmt.Sprintf("[POST /teams/{teamID}/subscriptions][%d] createNewTeamSubscriptionUnprocessableEntity  %+v", 422, o.Payload)
}

func (o *CreateNewTeamSubscriptionUnprocessableEntity) GetPayload() *models.APIErrorRenderExample {
	return o.Payload
}

func (o *CreateNewTeamSubscriptionUnprocessableEntity) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIErrorRenderExample)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateNewTeamSubscriptionInternalServerError creates a CreateNewTeamSubscriptionInternalServerError with default headers values
func NewCreateNewTeamSubscriptionInternalServerError() *CreateNewTeamSubscriptionInternalServerError {
	return &CreateNewTeamSubscriptionInternalServerError{}
}

/*
CreateNewTeamSubscriptionInternalServerError describes a response with status code 500, with default header values.

Internal server error
*/
type CreateNewTeamSubscriptionInternalServerError struct {
	Payload *models.APIErrorInternalServerExample
}

// IsSuccess returns true when this create new team subscription internal server error response has a 2xx status code
func (o *CreateNewTeamSubscriptionInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create new team subscription internal server error response has a 3xx status code
func (o *CreateNewTeamSubscriptionInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create new team subscription internal server error response has a 4xx status code
func (o *CreateNewTeamSubscriptionInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this create new team subscription internal server error response has a 5xx status code
func (o *CreateNewTeamSubscriptionInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this create new team subscription internal server error response a status code equal to that given
func (o *CreateNewTeamSubscriptionInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the create new team subscription internal server error response
func (o *CreateNewTeamSubscriptionInternalServerError) Code() int {
	return 500
}

func (o *CreateNewTeamSubscriptionInternalServerError) Error() string {
	return fmt.Sprintf("[POST /teams/{teamID}/subscriptions][%d] createNewTeamSubscriptionInternalServerError  %+v", 500, o.Payload)
}

func (o *CreateNewTeamSubscriptionInternalServerError) String() string {
	return fmt.Sprintf("[POST /teams/{teamID}/subscriptions][%d] createNewTeamSubscriptionInternalServerError  %+v", 500, o.Payload)
}

func (o *CreateNewTeamSubscriptionInternalServerError) GetPayload() *models.APIErrorInternalServerExample {
	return o.Payload
}

func (o *CreateNewTeamSubscriptionInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIErrorInternalServerExample)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
