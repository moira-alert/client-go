// Code generated by go-swagger; DO NOT EDIT.

package contact

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/moira-alert/client-go/pkg/models"
)

// GetContactEventsByIDReader is a Reader for the GetContactEventsByID structure.
type GetContactEventsByIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetContactEventsByIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetContactEventsByIDOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetContactEventsByIDBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetContactEventsByIDForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetContactEventsByIDNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 422:
		result := NewGetContactEventsByIDUnprocessableEntity()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetContactEventsByIDInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /contact/{contactID}/events] get-contact-events-by-id", response, response.Code())
	}
}

// NewGetContactEventsByIDOK creates a GetContactEventsByIDOK with default headers values
func NewGetContactEventsByIDOK() *GetContactEventsByIDOK {
	return &GetContactEventsByIDOK{}
}

/*
GetContactEventsByIDOK describes a response with status code 200, with default header values.

Successfully received contact events
*/
type GetContactEventsByIDOK struct {
	Payload *models.DtoContactEventItemList
}

// IsSuccess returns true when this get contact events by Id o k response has a 2xx status code
func (o *GetContactEventsByIDOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get contact events by Id o k response has a 3xx status code
func (o *GetContactEventsByIDOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get contact events by Id o k response has a 4xx status code
func (o *GetContactEventsByIDOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get contact events by Id o k response has a 5xx status code
func (o *GetContactEventsByIDOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get contact events by Id o k response a status code equal to that given
func (o *GetContactEventsByIDOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get contact events by Id o k response
func (o *GetContactEventsByIDOK) Code() int {
	return 200
}

func (o *GetContactEventsByIDOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /contact/{contactID}/events][%d] getContactEventsByIdOK %s", 200, payload)
}

func (o *GetContactEventsByIDOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /contact/{contactID}/events][%d] getContactEventsByIdOK %s", 200, payload)
}

func (o *GetContactEventsByIDOK) GetPayload() *models.DtoContactEventItemList {
	return o.Payload
}

func (o *GetContactEventsByIDOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.DtoContactEventItemList)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetContactEventsByIDBadRequest creates a GetContactEventsByIDBadRequest with default headers values
func NewGetContactEventsByIDBadRequest() *GetContactEventsByIDBadRequest {
	return &GetContactEventsByIDBadRequest{}
}

/*
GetContactEventsByIDBadRequest describes a response with status code 400, with default header values.

Bad request from client
*/
type GetContactEventsByIDBadRequest struct {
	Payload *models.APIErrorInvalidRequestExample
}

// IsSuccess returns true when this get contact events by Id bad request response has a 2xx status code
func (o *GetContactEventsByIDBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get contact events by Id bad request response has a 3xx status code
func (o *GetContactEventsByIDBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get contact events by Id bad request response has a 4xx status code
func (o *GetContactEventsByIDBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get contact events by Id bad request response has a 5xx status code
func (o *GetContactEventsByIDBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get contact events by Id bad request response a status code equal to that given
func (o *GetContactEventsByIDBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the get contact events by Id bad request response
func (o *GetContactEventsByIDBadRequest) Code() int {
	return 400
}

func (o *GetContactEventsByIDBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /contact/{contactID}/events][%d] getContactEventsByIdBadRequest %s", 400, payload)
}

func (o *GetContactEventsByIDBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /contact/{contactID}/events][%d] getContactEventsByIdBadRequest %s", 400, payload)
}

func (o *GetContactEventsByIDBadRequest) GetPayload() *models.APIErrorInvalidRequestExample {
	return o.Payload
}

func (o *GetContactEventsByIDBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIErrorInvalidRequestExample)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetContactEventsByIDForbidden creates a GetContactEventsByIDForbidden with default headers values
func NewGetContactEventsByIDForbidden() *GetContactEventsByIDForbidden {
	return &GetContactEventsByIDForbidden{}
}

/*
GetContactEventsByIDForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type GetContactEventsByIDForbidden struct {
	Payload *models.APIErrorForbiddenExample
}

// IsSuccess returns true when this get contact events by Id forbidden response has a 2xx status code
func (o *GetContactEventsByIDForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get contact events by Id forbidden response has a 3xx status code
func (o *GetContactEventsByIDForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get contact events by Id forbidden response has a 4xx status code
func (o *GetContactEventsByIDForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get contact events by Id forbidden response has a 5xx status code
func (o *GetContactEventsByIDForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get contact events by Id forbidden response a status code equal to that given
func (o *GetContactEventsByIDForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the get contact events by Id forbidden response
func (o *GetContactEventsByIDForbidden) Code() int {
	return 403
}

func (o *GetContactEventsByIDForbidden) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /contact/{contactID}/events][%d] getContactEventsByIdForbidden %s", 403, payload)
}

func (o *GetContactEventsByIDForbidden) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /contact/{contactID}/events][%d] getContactEventsByIdForbidden %s", 403, payload)
}

func (o *GetContactEventsByIDForbidden) GetPayload() *models.APIErrorForbiddenExample {
	return o.Payload
}

func (o *GetContactEventsByIDForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIErrorForbiddenExample)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetContactEventsByIDNotFound creates a GetContactEventsByIDNotFound with default headers values
func NewGetContactEventsByIDNotFound() *GetContactEventsByIDNotFound {
	return &GetContactEventsByIDNotFound{}
}

/*
GetContactEventsByIDNotFound describes a response with status code 404, with default header values.

Resource not found
*/
type GetContactEventsByIDNotFound struct {
	Payload *models.APIErrorNotFoundExample
}

// IsSuccess returns true when this get contact events by Id not found response has a 2xx status code
func (o *GetContactEventsByIDNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get contact events by Id not found response has a 3xx status code
func (o *GetContactEventsByIDNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get contact events by Id not found response has a 4xx status code
func (o *GetContactEventsByIDNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get contact events by Id not found response has a 5xx status code
func (o *GetContactEventsByIDNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get contact events by Id not found response a status code equal to that given
func (o *GetContactEventsByIDNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get contact events by Id not found response
func (o *GetContactEventsByIDNotFound) Code() int {
	return 404
}

func (o *GetContactEventsByIDNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /contact/{contactID}/events][%d] getContactEventsByIdNotFound %s", 404, payload)
}

func (o *GetContactEventsByIDNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /contact/{contactID}/events][%d] getContactEventsByIdNotFound %s", 404, payload)
}

func (o *GetContactEventsByIDNotFound) GetPayload() *models.APIErrorNotFoundExample {
	return o.Payload
}

func (o *GetContactEventsByIDNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIErrorNotFoundExample)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetContactEventsByIDUnprocessableEntity creates a GetContactEventsByIDUnprocessableEntity with default headers values
func NewGetContactEventsByIDUnprocessableEntity() *GetContactEventsByIDUnprocessableEntity {
	return &GetContactEventsByIDUnprocessableEntity{}
}

/*
GetContactEventsByIDUnprocessableEntity describes a response with status code 422, with default header values.

Render error
*/
type GetContactEventsByIDUnprocessableEntity struct {
	Payload *models.APIErrorRenderExample
}

// IsSuccess returns true when this get contact events by Id unprocessable entity response has a 2xx status code
func (o *GetContactEventsByIDUnprocessableEntity) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get contact events by Id unprocessable entity response has a 3xx status code
func (o *GetContactEventsByIDUnprocessableEntity) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get contact events by Id unprocessable entity response has a 4xx status code
func (o *GetContactEventsByIDUnprocessableEntity) IsClientError() bool {
	return true
}

// IsServerError returns true when this get contact events by Id unprocessable entity response has a 5xx status code
func (o *GetContactEventsByIDUnprocessableEntity) IsServerError() bool {
	return false
}

// IsCode returns true when this get contact events by Id unprocessable entity response a status code equal to that given
func (o *GetContactEventsByIDUnprocessableEntity) IsCode(code int) bool {
	return code == 422
}

// Code gets the status code for the get contact events by Id unprocessable entity response
func (o *GetContactEventsByIDUnprocessableEntity) Code() int {
	return 422
}

func (o *GetContactEventsByIDUnprocessableEntity) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /contact/{contactID}/events][%d] getContactEventsByIdUnprocessableEntity %s", 422, payload)
}

func (o *GetContactEventsByIDUnprocessableEntity) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /contact/{contactID}/events][%d] getContactEventsByIdUnprocessableEntity %s", 422, payload)
}

func (o *GetContactEventsByIDUnprocessableEntity) GetPayload() *models.APIErrorRenderExample {
	return o.Payload
}

func (o *GetContactEventsByIDUnprocessableEntity) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIErrorRenderExample)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetContactEventsByIDInternalServerError creates a GetContactEventsByIDInternalServerError with default headers values
func NewGetContactEventsByIDInternalServerError() *GetContactEventsByIDInternalServerError {
	return &GetContactEventsByIDInternalServerError{}
}

/*
GetContactEventsByIDInternalServerError describes a response with status code 500, with default header values.

Internal server error
*/
type GetContactEventsByIDInternalServerError struct {
	Payload *models.APIErrorInternalServerExample
}

// IsSuccess returns true when this get contact events by Id internal server error response has a 2xx status code
func (o *GetContactEventsByIDInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get contact events by Id internal server error response has a 3xx status code
func (o *GetContactEventsByIDInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get contact events by Id internal server error response has a 4xx status code
func (o *GetContactEventsByIDInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get contact events by Id internal server error response has a 5xx status code
func (o *GetContactEventsByIDInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get contact events by Id internal server error response a status code equal to that given
func (o *GetContactEventsByIDInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the get contact events by Id internal server error response
func (o *GetContactEventsByIDInternalServerError) Code() int {
	return 500
}

func (o *GetContactEventsByIDInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /contact/{contactID}/events][%d] getContactEventsByIdInternalServerError %s", 500, payload)
}

func (o *GetContactEventsByIDInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /contact/{contactID}/events][%d] getContactEventsByIdInternalServerError %s", 500, payload)
}

func (o *GetContactEventsByIDInternalServerError) GetPayload() *models.APIErrorInternalServerExample {
	return o.Payload
}

func (o *GetContactEventsByIDInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIErrorInternalServerExample)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
