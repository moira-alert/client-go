// Code generated by go-swagger; DO NOT EDIT.

package contact

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"

	"github.com/moira-alert/client-go/pkg/models"
)

// NewUpdateContactParams creates a new UpdateContactParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewUpdateContactParams() *UpdateContactParams {
	return &UpdateContactParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewUpdateContactParamsWithTimeout creates a new UpdateContactParams object
// with the ability to set a timeout on a request.
func NewUpdateContactParamsWithTimeout(timeout time.Duration) *UpdateContactParams {
	return &UpdateContactParams{
		timeout: timeout,
	}
}

// NewUpdateContactParamsWithContext creates a new UpdateContactParams object
// with the ability to set a context for a request.
func NewUpdateContactParamsWithContext(ctx context.Context) *UpdateContactParams {
	return &UpdateContactParams{
		Context: ctx,
	}
}

// NewUpdateContactParamsWithHTTPClient creates a new UpdateContactParams object
// with the ability to set a custom HTTPClient for a request.
func NewUpdateContactParamsWithHTTPClient(client *http.Client) *UpdateContactParams {
	return &UpdateContactParams{
		HTTPClient: client,
	}
}

/*
UpdateContactParams contains all the parameters to send to the API endpoint

	for the update contact operation.

	Typically these are written to a http.Request.
*/
type UpdateContactParams struct {

	/* Contact.

	   Updated contact data
	*/
	Contact *models.DtoContact

	/* ContactID.

	   ID of the contact to update

	   Default: "bcba82f5-48cf-44c0-b7d6-e1d32c64a88c"
	*/
	ContactID string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the update contact params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *UpdateContactParams) WithDefaults() *UpdateContactParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the update contact params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *UpdateContactParams) SetDefaults() {
	var (
		contactIDDefault = string("bcba82f5-48cf-44c0-b7d6-e1d32c64a88c")
	)

	val := UpdateContactParams{
		ContactID: contactIDDefault,
	}

	val.timeout = o.timeout
	val.Context = o.Context
	val.HTTPClient = o.HTTPClient
	*o = val
}

// WithTimeout adds the timeout to the update contact params
func (o *UpdateContactParams) WithTimeout(timeout time.Duration) *UpdateContactParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the update contact params
func (o *UpdateContactParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the update contact params
func (o *UpdateContactParams) WithContext(ctx context.Context) *UpdateContactParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the update contact params
func (o *UpdateContactParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the update contact params
func (o *UpdateContactParams) WithHTTPClient(client *http.Client) *UpdateContactParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the update contact params
func (o *UpdateContactParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithContact adds the contact to the update contact params
func (o *UpdateContactParams) WithContact(contact *models.DtoContact) *UpdateContactParams {
	o.SetContact(contact)
	return o
}

// SetContact adds the contact to the update contact params
func (o *UpdateContactParams) SetContact(contact *models.DtoContact) {
	o.Contact = contact
}

// WithContactID adds the contactID to the update contact params
func (o *UpdateContactParams) WithContactID(contactID string) *UpdateContactParams {
	o.SetContactID(contactID)
	return o
}

// SetContactID adds the contactId to the update contact params
func (o *UpdateContactParams) SetContactID(contactID string) {
	o.ContactID = contactID
}

// WriteToRequest writes these params to a swagger request
func (o *UpdateContactParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error
	if o.Contact != nil {
		if err := r.SetBodyParam(o.Contact); err != nil {
			return err
		}
	}

	// path param contactID
	if err := r.SetPathParam("contactID", o.ContactID); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
