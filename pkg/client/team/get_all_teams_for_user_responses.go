// Code generated by go-swagger; DO NOT EDIT.

package team

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/moira-alert/client-go/pkg/models"
)

// GetAllTeamsForUserReader is a Reader for the GetAllTeamsForUser structure.
type GetAllTeamsForUserReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetAllTeamsForUserReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetAllTeamsForUserOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 422:
		result := NewGetAllTeamsForUserUnprocessableEntity()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetAllTeamsForUserInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /teams] get-all-teams-for-user", response, response.Code())
	}
}

// NewGetAllTeamsForUserOK creates a GetAllTeamsForUserOK with default headers values
func NewGetAllTeamsForUserOK() *GetAllTeamsForUserOK {
	return &GetAllTeamsForUserOK{}
}

/*
GetAllTeamsForUserOK describes a response with status code 200, with default header values.

Teams fetched successfully
*/
type GetAllTeamsForUserOK struct {
	Payload *models.DtoUserTeams
}

// IsSuccess returns true when this get all teams for user o k response has a 2xx status code
func (o *GetAllTeamsForUserOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get all teams for user o k response has a 3xx status code
func (o *GetAllTeamsForUserOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get all teams for user o k response has a 4xx status code
func (o *GetAllTeamsForUserOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get all teams for user o k response has a 5xx status code
func (o *GetAllTeamsForUserOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get all teams for user o k response a status code equal to that given
func (o *GetAllTeamsForUserOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get all teams for user o k response
func (o *GetAllTeamsForUserOK) Code() int {
	return 200
}

func (o *GetAllTeamsForUserOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /teams][%d] getAllTeamsForUserOK %s", 200, payload)
}

func (o *GetAllTeamsForUserOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /teams][%d] getAllTeamsForUserOK %s", 200, payload)
}

func (o *GetAllTeamsForUserOK) GetPayload() *models.DtoUserTeams {
	return o.Payload
}

func (o *GetAllTeamsForUserOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.DtoUserTeams)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAllTeamsForUserUnprocessableEntity creates a GetAllTeamsForUserUnprocessableEntity with default headers values
func NewGetAllTeamsForUserUnprocessableEntity() *GetAllTeamsForUserUnprocessableEntity {
	return &GetAllTeamsForUserUnprocessableEntity{}
}

/*
GetAllTeamsForUserUnprocessableEntity describes a response with status code 422, with default header values.

Render error
*/
type GetAllTeamsForUserUnprocessableEntity struct {
	Payload *models.APIErrorRenderExample
}

// IsSuccess returns true when this get all teams for user unprocessable entity response has a 2xx status code
func (o *GetAllTeamsForUserUnprocessableEntity) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get all teams for user unprocessable entity response has a 3xx status code
func (o *GetAllTeamsForUserUnprocessableEntity) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get all teams for user unprocessable entity response has a 4xx status code
func (o *GetAllTeamsForUserUnprocessableEntity) IsClientError() bool {
	return true
}

// IsServerError returns true when this get all teams for user unprocessable entity response has a 5xx status code
func (o *GetAllTeamsForUserUnprocessableEntity) IsServerError() bool {
	return false
}

// IsCode returns true when this get all teams for user unprocessable entity response a status code equal to that given
func (o *GetAllTeamsForUserUnprocessableEntity) IsCode(code int) bool {
	return code == 422
}

// Code gets the status code for the get all teams for user unprocessable entity response
func (o *GetAllTeamsForUserUnprocessableEntity) Code() int {
	return 422
}

func (o *GetAllTeamsForUserUnprocessableEntity) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /teams][%d] getAllTeamsForUserUnprocessableEntity %s", 422, payload)
}

func (o *GetAllTeamsForUserUnprocessableEntity) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /teams][%d] getAllTeamsForUserUnprocessableEntity %s", 422, payload)
}

func (o *GetAllTeamsForUserUnprocessableEntity) GetPayload() *models.APIErrorRenderExample {
	return o.Payload
}

func (o *GetAllTeamsForUserUnprocessableEntity) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIErrorRenderExample)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAllTeamsForUserInternalServerError creates a GetAllTeamsForUserInternalServerError with default headers values
func NewGetAllTeamsForUserInternalServerError() *GetAllTeamsForUserInternalServerError {
	return &GetAllTeamsForUserInternalServerError{}
}

/*
GetAllTeamsForUserInternalServerError describes a response with status code 500, with default header values.

Internal server error
*/
type GetAllTeamsForUserInternalServerError struct {
	Payload *models.APIErrorInternalServerExample
}

// IsSuccess returns true when this get all teams for user internal server error response has a 2xx status code
func (o *GetAllTeamsForUserInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get all teams for user internal server error response has a 3xx status code
func (o *GetAllTeamsForUserInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get all teams for user internal server error response has a 4xx status code
func (o *GetAllTeamsForUserInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get all teams for user internal server error response has a 5xx status code
func (o *GetAllTeamsForUserInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get all teams for user internal server error response a status code equal to that given
func (o *GetAllTeamsForUserInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the get all teams for user internal server error response
func (o *GetAllTeamsForUserInternalServerError) Code() int {
	return 500
}

func (o *GetAllTeamsForUserInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /teams][%d] getAllTeamsForUserInternalServerError %s", 500, payload)
}

func (o *GetAllTeamsForUserInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /teams][%d] getAllTeamsForUserInternalServerError %s", 500, payload)
}

func (o *GetAllTeamsForUserInternalServerError) GetPayload() *models.APIErrorInternalServerExample {
	return o.Payload
}

func (o *GetAllTeamsForUserInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIErrorInternalServerExample)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
