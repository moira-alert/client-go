// Code generated by go-swagger; DO NOT EDIT.

package team

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/moira-alert/client-go/pkg/models"
)

// SetTeamUsersReader is a Reader for the SetTeamUsers structure.
type SetTeamUsersReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *SetTeamUsersReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewSetTeamUsersOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewSetTeamUsersBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewSetTeamUsersForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewSetTeamUsersNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 422:
		result := NewSetTeamUsersUnprocessableEntity()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewSetTeamUsersInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[PUT /teams/{teamID}/users] set-team-users", response, response.Code())
	}
}

// NewSetTeamUsersOK creates a SetTeamUsersOK with default headers values
func NewSetTeamUsersOK() *SetTeamUsersOK {
	return &SetTeamUsersOK{}
}

/*
SetTeamUsersOK describes a response with status code 200, with default header values.

Team updated successfully
*/
type SetTeamUsersOK struct {
	Payload *models.DtoTeamMembers
}

// IsSuccess returns true when this set team users o k response has a 2xx status code
func (o *SetTeamUsersOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this set team users o k response has a 3xx status code
func (o *SetTeamUsersOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this set team users o k response has a 4xx status code
func (o *SetTeamUsersOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this set team users o k response has a 5xx status code
func (o *SetTeamUsersOK) IsServerError() bool {
	return false
}

// IsCode returns true when this set team users o k response a status code equal to that given
func (o *SetTeamUsersOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the set team users o k response
func (o *SetTeamUsersOK) Code() int {
	return 200
}

func (o *SetTeamUsersOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /teams/{teamID}/users][%d] setTeamUsersOK %s", 200, payload)
}

func (o *SetTeamUsersOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /teams/{teamID}/users][%d] setTeamUsersOK %s", 200, payload)
}

func (o *SetTeamUsersOK) GetPayload() *models.DtoTeamMembers {
	return o.Payload
}

func (o *SetTeamUsersOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.DtoTeamMembers)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSetTeamUsersBadRequest creates a SetTeamUsersBadRequest with default headers values
func NewSetTeamUsersBadRequest() *SetTeamUsersBadRequest {
	return &SetTeamUsersBadRequest{}
}

/*
SetTeamUsersBadRequest describes a response with status code 400, with default header values.

Bad request from client
*/
type SetTeamUsersBadRequest struct {
	Payload *models.APIErrorInvalidRequestExample
}

// IsSuccess returns true when this set team users bad request response has a 2xx status code
func (o *SetTeamUsersBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this set team users bad request response has a 3xx status code
func (o *SetTeamUsersBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this set team users bad request response has a 4xx status code
func (o *SetTeamUsersBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this set team users bad request response has a 5xx status code
func (o *SetTeamUsersBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this set team users bad request response a status code equal to that given
func (o *SetTeamUsersBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the set team users bad request response
func (o *SetTeamUsersBadRequest) Code() int {
	return 400
}

func (o *SetTeamUsersBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /teams/{teamID}/users][%d] setTeamUsersBadRequest %s", 400, payload)
}

func (o *SetTeamUsersBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /teams/{teamID}/users][%d] setTeamUsersBadRequest %s", 400, payload)
}

func (o *SetTeamUsersBadRequest) GetPayload() *models.APIErrorInvalidRequestExample {
	return o.Payload
}

func (o *SetTeamUsersBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIErrorInvalidRequestExample)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSetTeamUsersForbidden creates a SetTeamUsersForbidden with default headers values
func NewSetTeamUsersForbidden() *SetTeamUsersForbidden {
	return &SetTeamUsersForbidden{}
}

/*
SetTeamUsersForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type SetTeamUsersForbidden struct {
	Payload *models.APIErrorForbiddenExample
}

// IsSuccess returns true when this set team users forbidden response has a 2xx status code
func (o *SetTeamUsersForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this set team users forbidden response has a 3xx status code
func (o *SetTeamUsersForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this set team users forbidden response has a 4xx status code
func (o *SetTeamUsersForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this set team users forbidden response has a 5xx status code
func (o *SetTeamUsersForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this set team users forbidden response a status code equal to that given
func (o *SetTeamUsersForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the set team users forbidden response
func (o *SetTeamUsersForbidden) Code() int {
	return 403
}

func (o *SetTeamUsersForbidden) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /teams/{teamID}/users][%d] setTeamUsersForbidden %s", 403, payload)
}

func (o *SetTeamUsersForbidden) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /teams/{teamID}/users][%d] setTeamUsersForbidden %s", 403, payload)
}

func (o *SetTeamUsersForbidden) GetPayload() *models.APIErrorForbiddenExample {
	return o.Payload
}

func (o *SetTeamUsersForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIErrorForbiddenExample)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSetTeamUsersNotFound creates a SetTeamUsersNotFound with default headers values
func NewSetTeamUsersNotFound() *SetTeamUsersNotFound {
	return &SetTeamUsersNotFound{}
}

/*
SetTeamUsersNotFound describes a response with status code 404, with default header values.

Resource not found
*/
type SetTeamUsersNotFound struct {
	Payload *models.APIErrorNotFoundExample
}

// IsSuccess returns true when this set team users not found response has a 2xx status code
func (o *SetTeamUsersNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this set team users not found response has a 3xx status code
func (o *SetTeamUsersNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this set team users not found response has a 4xx status code
func (o *SetTeamUsersNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this set team users not found response has a 5xx status code
func (o *SetTeamUsersNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this set team users not found response a status code equal to that given
func (o *SetTeamUsersNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the set team users not found response
func (o *SetTeamUsersNotFound) Code() int {
	return 404
}

func (o *SetTeamUsersNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /teams/{teamID}/users][%d] setTeamUsersNotFound %s", 404, payload)
}

func (o *SetTeamUsersNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /teams/{teamID}/users][%d] setTeamUsersNotFound %s", 404, payload)
}

func (o *SetTeamUsersNotFound) GetPayload() *models.APIErrorNotFoundExample {
	return o.Payload
}

func (o *SetTeamUsersNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIErrorNotFoundExample)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSetTeamUsersUnprocessableEntity creates a SetTeamUsersUnprocessableEntity with default headers values
func NewSetTeamUsersUnprocessableEntity() *SetTeamUsersUnprocessableEntity {
	return &SetTeamUsersUnprocessableEntity{}
}

/*
SetTeamUsersUnprocessableEntity describes a response with status code 422, with default header values.

Render error
*/
type SetTeamUsersUnprocessableEntity struct {
	Payload *models.APIErrorRenderExample
}

// IsSuccess returns true when this set team users unprocessable entity response has a 2xx status code
func (o *SetTeamUsersUnprocessableEntity) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this set team users unprocessable entity response has a 3xx status code
func (o *SetTeamUsersUnprocessableEntity) IsRedirect() bool {
	return false
}

// IsClientError returns true when this set team users unprocessable entity response has a 4xx status code
func (o *SetTeamUsersUnprocessableEntity) IsClientError() bool {
	return true
}

// IsServerError returns true when this set team users unprocessable entity response has a 5xx status code
func (o *SetTeamUsersUnprocessableEntity) IsServerError() bool {
	return false
}

// IsCode returns true when this set team users unprocessable entity response a status code equal to that given
func (o *SetTeamUsersUnprocessableEntity) IsCode(code int) bool {
	return code == 422
}

// Code gets the status code for the set team users unprocessable entity response
func (o *SetTeamUsersUnprocessableEntity) Code() int {
	return 422
}

func (o *SetTeamUsersUnprocessableEntity) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /teams/{teamID}/users][%d] setTeamUsersUnprocessableEntity %s", 422, payload)
}

func (o *SetTeamUsersUnprocessableEntity) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /teams/{teamID}/users][%d] setTeamUsersUnprocessableEntity %s", 422, payload)
}

func (o *SetTeamUsersUnprocessableEntity) GetPayload() *models.APIErrorRenderExample {
	return o.Payload
}

func (o *SetTeamUsersUnprocessableEntity) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIErrorRenderExample)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSetTeamUsersInternalServerError creates a SetTeamUsersInternalServerError with default headers values
func NewSetTeamUsersInternalServerError() *SetTeamUsersInternalServerError {
	return &SetTeamUsersInternalServerError{}
}

/*
SetTeamUsersInternalServerError describes a response with status code 500, with default header values.

Internal server error
*/
type SetTeamUsersInternalServerError struct {
	Payload *models.APIErrorInternalServerExample
}

// IsSuccess returns true when this set team users internal server error response has a 2xx status code
func (o *SetTeamUsersInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this set team users internal server error response has a 3xx status code
func (o *SetTeamUsersInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this set team users internal server error response has a 4xx status code
func (o *SetTeamUsersInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this set team users internal server error response has a 5xx status code
func (o *SetTeamUsersInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this set team users internal server error response a status code equal to that given
func (o *SetTeamUsersInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the set team users internal server error response
func (o *SetTeamUsersInternalServerError) Code() int {
	return 500
}

func (o *SetTeamUsersInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /teams/{teamID}/users][%d] setTeamUsersInternalServerError %s", 500, payload)
}

func (o *SetTeamUsersInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /teams/{teamID}/users][%d] setTeamUsersInternalServerError %s", 500, payload)
}

func (o *SetTeamUsersInternalServerError) GetPayload() *models.APIErrorInternalServerExample {
	return o.Payload
}

func (o *SetTeamUsersInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIErrorInternalServerExample)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
