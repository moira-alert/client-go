// Code generated by go-swagger; DO NOT EDIT.

package team

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/moira-alert/client-go/pkg/models"
)

// AddTeamUsersReader is a Reader for the AddTeamUsers structure.
type AddTeamUsersReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *AddTeamUsersReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewAddTeamUsersOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewAddTeamUsersBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewAddTeamUsersForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewAddTeamUsersNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 422:
		result := NewAddTeamUsersUnprocessableEntity()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewAddTeamUsersInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /teams/{teamID}/users] add-team-users", response, response.Code())
	}
}

// NewAddTeamUsersOK creates a AddTeamUsersOK with default headers values
func NewAddTeamUsersOK() *AddTeamUsersOK {
	return &AddTeamUsersOK{}
}

/*
AddTeamUsersOK describes a response with status code 200, with default header values.

Team updated successfully
*/
type AddTeamUsersOK struct {
	Payload *models.DtoTeamMembers
}

// IsSuccess returns true when this add team users o k response has a 2xx status code
func (o *AddTeamUsersOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this add team users o k response has a 3xx status code
func (o *AddTeamUsersOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this add team users o k response has a 4xx status code
func (o *AddTeamUsersOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this add team users o k response has a 5xx status code
func (o *AddTeamUsersOK) IsServerError() bool {
	return false
}

// IsCode returns true when this add team users o k response a status code equal to that given
func (o *AddTeamUsersOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the add team users o k response
func (o *AddTeamUsersOK) Code() int {
	return 200
}

func (o *AddTeamUsersOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /teams/{teamID}/users][%d] addTeamUsersOK %s", 200, payload)
}

func (o *AddTeamUsersOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /teams/{teamID}/users][%d] addTeamUsersOK %s", 200, payload)
}

func (o *AddTeamUsersOK) GetPayload() *models.DtoTeamMembers {
	return o.Payload
}

func (o *AddTeamUsersOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.DtoTeamMembers)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAddTeamUsersBadRequest creates a AddTeamUsersBadRequest with default headers values
func NewAddTeamUsersBadRequest() *AddTeamUsersBadRequest {
	return &AddTeamUsersBadRequest{}
}

/*
AddTeamUsersBadRequest describes a response with status code 400, with default header values.

Bad request from client
*/
type AddTeamUsersBadRequest struct {
	Payload *models.APIErrorInvalidRequestExample
}

// IsSuccess returns true when this add team users bad request response has a 2xx status code
func (o *AddTeamUsersBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this add team users bad request response has a 3xx status code
func (o *AddTeamUsersBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this add team users bad request response has a 4xx status code
func (o *AddTeamUsersBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this add team users bad request response has a 5xx status code
func (o *AddTeamUsersBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this add team users bad request response a status code equal to that given
func (o *AddTeamUsersBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the add team users bad request response
func (o *AddTeamUsersBadRequest) Code() int {
	return 400
}

func (o *AddTeamUsersBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /teams/{teamID}/users][%d] addTeamUsersBadRequest %s", 400, payload)
}

func (o *AddTeamUsersBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /teams/{teamID}/users][%d] addTeamUsersBadRequest %s", 400, payload)
}

func (o *AddTeamUsersBadRequest) GetPayload() *models.APIErrorInvalidRequestExample {
	return o.Payload
}

func (o *AddTeamUsersBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIErrorInvalidRequestExample)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAddTeamUsersForbidden creates a AddTeamUsersForbidden with default headers values
func NewAddTeamUsersForbidden() *AddTeamUsersForbidden {
	return &AddTeamUsersForbidden{}
}

/*
AddTeamUsersForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type AddTeamUsersForbidden struct {
	Payload *models.APIErrorForbiddenExample
}

// IsSuccess returns true when this add team users forbidden response has a 2xx status code
func (o *AddTeamUsersForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this add team users forbidden response has a 3xx status code
func (o *AddTeamUsersForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this add team users forbidden response has a 4xx status code
func (o *AddTeamUsersForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this add team users forbidden response has a 5xx status code
func (o *AddTeamUsersForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this add team users forbidden response a status code equal to that given
func (o *AddTeamUsersForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the add team users forbidden response
func (o *AddTeamUsersForbidden) Code() int {
	return 403
}

func (o *AddTeamUsersForbidden) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /teams/{teamID}/users][%d] addTeamUsersForbidden %s", 403, payload)
}

func (o *AddTeamUsersForbidden) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /teams/{teamID}/users][%d] addTeamUsersForbidden %s", 403, payload)
}

func (o *AddTeamUsersForbidden) GetPayload() *models.APIErrorForbiddenExample {
	return o.Payload
}

func (o *AddTeamUsersForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIErrorForbiddenExample)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAddTeamUsersNotFound creates a AddTeamUsersNotFound with default headers values
func NewAddTeamUsersNotFound() *AddTeamUsersNotFound {
	return &AddTeamUsersNotFound{}
}

/*
AddTeamUsersNotFound describes a response with status code 404, with default header values.

Resource not found
*/
type AddTeamUsersNotFound struct {
	Payload *models.APIErrorNotFoundExample
}

// IsSuccess returns true when this add team users not found response has a 2xx status code
func (o *AddTeamUsersNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this add team users not found response has a 3xx status code
func (o *AddTeamUsersNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this add team users not found response has a 4xx status code
func (o *AddTeamUsersNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this add team users not found response has a 5xx status code
func (o *AddTeamUsersNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this add team users not found response a status code equal to that given
func (o *AddTeamUsersNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the add team users not found response
func (o *AddTeamUsersNotFound) Code() int {
	return 404
}

func (o *AddTeamUsersNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /teams/{teamID}/users][%d] addTeamUsersNotFound %s", 404, payload)
}

func (o *AddTeamUsersNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /teams/{teamID}/users][%d] addTeamUsersNotFound %s", 404, payload)
}

func (o *AddTeamUsersNotFound) GetPayload() *models.APIErrorNotFoundExample {
	return o.Payload
}

func (o *AddTeamUsersNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIErrorNotFoundExample)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAddTeamUsersUnprocessableEntity creates a AddTeamUsersUnprocessableEntity with default headers values
func NewAddTeamUsersUnprocessableEntity() *AddTeamUsersUnprocessableEntity {
	return &AddTeamUsersUnprocessableEntity{}
}

/*
AddTeamUsersUnprocessableEntity describes a response with status code 422, with default header values.

Render error
*/
type AddTeamUsersUnprocessableEntity struct {
	Payload *models.APIErrorRenderExample
}

// IsSuccess returns true when this add team users unprocessable entity response has a 2xx status code
func (o *AddTeamUsersUnprocessableEntity) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this add team users unprocessable entity response has a 3xx status code
func (o *AddTeamUsersUnprocessableEntity) IsRedirect() bool {
	return false
}

// IsClientError returns true when this add team users unprocessable entity response has a 4xx status code
func (o *AddTeamUsersUnprocessableEntity) IsClientError() bool {
	return true
}

// IsServerError returns true when this add team users unprocessable entity response has a 5xx status code
func (o *AddTeamUsersUnprocessableEntity) IsServerError() bool {
	return false
}

// IsCode returns true when this add team users unprocessable entity response a status code equal to that given
func (o *AddTeamUsersUnprocessableEntity) IsCode(code int) bool {
	return code == 422
}

// Code gets the status code for the add team users unprocessable entity response
func (o *AddTeamUsersUnprocessableEntity) Code() int {
	return 422
}

func (o *AddTeamUsersUnprocessableEntity) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /teams/{teamID}/users][%d] addTeamUsersUnprocessableEntity %s", 422, payload)
}

func (o *AddTeamUsersUnprocessableEntity) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /teams/{teamID}/users][%d] addTeamUsersUnprocessableEntity %s", 422, payload)
}

func (o *AddTeamUsersUnprocessableEntity) GetPayload() *models.APIErrorRenderExample {
	return o.Payload
}

func (o *AddTeamUsersUnprocessableEntity) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIErrorRenderExample)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAddTeamUsersInternalServerError creates a AddTeamUsersInternalServerError with default headers values
func NewAddTeamUsersInternalServerError() *AddTeamUsersInternalServerError {
	return &AddTeamUsersInternalServerError{}
}

/*
AddTeamUsersInternalServerError describes a response with status code 500, with default header values.

Internal server error
*/
type AddTeamUsersInternalServerError struct {
	Payload *models.APIErrorInternalServerExample
}

// IsSuccess returns true when this add team users internal server error response has a 2xx status code
func (o *AddTeamUsersInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this add team users internal server error response has a 3xx status code
func (o *AddTeamUsersInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this add team users internal server error response has a 4xx status code
func (o *AddTeamUsersInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this add team users internal server error response has a 5xx status code
func (o *AddTeamUsersInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this add team users internal server error response a status code equal to that given
func (o *AddTeamUsersInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the add team users internal server error response
func (o *AddTeamUsersInternalServerError) Code() int {
	return 500
}

func (o *AddTeamUsersInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /teams/{teamID}/users][%d] addTeamUsersInternalServerError %s", 500, payload)
}

func (o *AddTeamUsersInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /teams/{teamID}/users][%d] addTeamUsersInternalServerError %s", 500, payload)
}

func (o *AddTeamUsersInternalServerError) GetPayload() *models.APIErrorInternalServerExample {
	return o.Payload
}

func (o *AddTeamUsersInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIErrorInternalServerExample)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
