// Code generated by go-swagger; DO NOT EDIT.

package pattern

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
)

// NewDeletePatternParams creates a new DeletePatternParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewDeletePatternParams() *DeletePatternParams {
	return &DeletePatternParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewDeletePatternParamsWithTimeout creates a new DeletePatternParams object
// with the ability to set a timeout on a request.
func NewDeletePatternParamsWithTimeout(timeout time.Duration) *DeletePatternParams {
	return &DeletePatternParams{
		timeout: timeout,
	}
}

// NewDeletePatternParamsWithContext creates a new DeletePatternParams object
// with the ability to set a context for a request.
func NewDeletePatternParamsWithContext(ctx context.Context) *DeletePatternParams {
	return &DeletePatternParams{
		Context: ctx,
	}
}

// NewDeletePatternParamsWithHTTPClient creates a new DeletePatternParams object
// with the ability to set a custom HTTPClient for a request.
func NewDeletePatternParamsWithHTTPClient(client *http.Client) *DeletePatternParams {
	return &DeletePatternParams{
		HTTPClient: client,
	}
}

/*
DeletePatternParams contains all the parameters to send to the API endpoint

	for the delete pattern operation.

	Typically these are written to a http.Request.
*/
type DeletePatternParams struct {

	/* Pattern.

	   Trigger pattern to operate on

	   Default: "DevOps.my_server.hdd.freespace_mbytes"
	*/
	Pattern string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the delete pattern params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *DeletePatternParams) WithDefaults() *DeletePatternParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the delete pattern params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *DeletePatternParams) SetDefaults() {
	var (
		patternDefault = string("DevOps.my_server.hdd.freespace_mbytes")
	)

	val := DeletePatternParams{
		Pattern: patternDefault,
	}

	val.timeout = o.timeout
	val.Context = o.Context
	val.HTTPClient = o.HTTPClient
	*o = val
}

// WithTimeout adds the timeout to the delete pattern params
func (o *DeletePatternParams) WithTimeout(timeout time.Duration) *DeletePatternParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the delete pattern params
func (o *DeletePatternParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the delete pattern params
func (o *DeletePatternParams) WithContext(ctx context.Context) *DeletePatternParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the delete pattern params
func (o *DeletePatternParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the delete pattern params
func (o *DeletePatternParams) WithHTTPClient(client *http.Client) *DeletePatternParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the delete pattern params
func (o *DeletePatternParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithPattern adds the pattern to the delete pattern params
func (o *DeletePatternParams) WithPattern(pattern string) *DeletePatternParams {
	o.SetPattern(pattern)
	return o
}

// SetPattern adds the pattern to the delete pattern params
func (o *DeletePatternParams) SetPattern(pattern string) {
	o.Pattern = pattern
}

// WriteToRequest writes these params to a swagger request
func (o *DeletePatternParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param pattern
	if err := r.SetPathParam("pattern", o.Pattern); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
