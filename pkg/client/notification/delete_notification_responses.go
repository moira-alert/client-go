// Code generated by go-swagger; DO NOT EDIT.

package notification

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/moira-alert/client-go/pkg/models"
)

// DeleteNotificationReader is a Reader for the DeleteNotification structure.
type DeleteNotificationReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteNotificationReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewDeleteNotificationOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewDeleteNotificationBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 422:
		result := NewDeleteNotificationUnprocessableEntity()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewDeleteNotificationInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[DELETE /notification] delete-notification", response, response.Code())
	}
}

// NewDeleteNotificationOK creates a DeleteNotificationOK with default headers values
func NewDeleteNotificationOK() *DeleteNotificationOK {
	return &DeleteNotificationOK{}
}

/*
DeleteNotificationOK describes a response with status code 200, with default header values.

Notification have been deleted
*/
type DeleteNotificationOK struct {
	Payload *models.DtoNotificationDeleteResponse
}

// IsSuccess returns true when this delete notification o k response has a 2xx status code
func (o *DeleteNotificationOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this delete notification o k response has a 3xx status code
func (o *DeleteNotificationOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete notification o k response has a 4xx status code
func (o *DeleteNotificationOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this delete notification o k response has a 5xx status code
func (o *DeleteNotificationOK) IsServerError() bool {
	return false
}

// IsCode returns true when this delete notification o k response a status code equal to that given
func (o *DeleteNotificationOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the delete notification o k response
func (o *DeleteNotificationOK) Code() int {
	return 200
}

func (o *DeleteNotificationOK) Error() string {
	return fmt.Sprintf("[DELETE /notification][%d] deleteNotificationOK  %+v", 200, o.Payload)
}

func (o *DeleteNotificationOK) String() string {
	return fmt.Sprintf("[DELETE /notification][%d] deleteNotificationOK  %+v", 200, o.Payload)
}

func (o *DeleteNotificationOK) GetPayload() *models.DtoNotificationDeleteResponse {
	return o.Payload
}

func (o *DeleteNotificationOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.DtoNotificationDeleteResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteNotificationBadRequest creates a DeleteNotificationBadRequest with default headers values
func NewDeleteNotificationBadRequest() *DeleteNotificationBadRequest {
	return &DeleteNotificationBadRequest{}
}

/*
DeleteNotificationBadRequest describes a response with status code 400, with default header values.

Bad request from client
*/
type DeleteNotificationBadRequest struct {
	Payload *models.APIErrorInvalidRequestExample
}

// IsSuccess returns true when this delete notification bad request response has a 2xx status code
func (o *DeleteNotificationBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete notification bad request response has a 3xx status code
func (o *DeleteNotificationBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete notification bad request response has a 4xx status code
func (o *DeleteNotificationBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete notification bad request response has a 5xx status code
func (o *DeleteNotificationBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this delete notification bad request response a status code equal to that given
func (o *DeleteNotificationBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the delete notification bad request response
func (o *DeleteNotificationBadRequest) Code() int {
	return 400
}

func (o *DeleteNotificationBadRequest) Error() string {
	return fmt.Sprintf("[DELETE /notification][%d] deleteNotificationBadRequest  %+v", 400, o.Payload)
}

func (o *DeleteNotificationBadRequest) String() string {
	return fmt.Sprintf("[DELETE /notification][%d] deleteNotificationBadRequest  %+v", 400, o.Payload)
}

func (o *DeleteNotificationBadRequest) GetPayload() *models.APIErrorInvalidRequestExample {
	return o.Payload
}

func (o *DeleteNotificationBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIErrorInvalidRequestExample)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteNotificationUnprocessableEntity creates a DeleteNotificationUnprocessableEntity with default headers values
func NewDeleteNotificationUnprocessableEntity() *DeleteNotificationUnprocessableEntity {
	return &DeleteNotificationUnprocessableEntity{}
}

/*
DeleteNotificationUnprocessableEntity describes a response with status code 422, with default header values.

Render error
*/
type DeleteNotificationUnprocessableEntity struct {
	Payload *models.APIErrorRenderExample
}

// IsSuccess returns true when this delete notification unprocessable entity response has a 2xx status code
func (o *DeleteNotificationUnprocessableEntity) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete notification unprocessable entity response has a 3xx status code
func (o *DeleteNotificationUnprocessableEntity) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete notification unprocessable entity response has a 4xx status code
func (o *DeleteNotificationUnprocessableEntity) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete notification unprocessable entity response has a 5xx status code
func (o *DeleteNotificationUnprocessableEntity) IsServerError() bool {
	return false
}

// IsCode returns true when this delete notification unprocessable entity response a status code equal to that given
func (o *DeleteNotificationUnprocessableEntity) IsCode(code int) bool {
	return code == 422
}

// Code gets the status code for the delete notification unprocessable entity response
func (o *DeleteNotificationUnprocessableEntity) Code() int {
	return 422
}

func (o *DeleteNotificationUnprocessableEntity) Error() string {
	return fmt.Sprintf("[DELETE /notification][%d] deleteNotificationUnprocessableEntity  %+v", 422, o.Payload)
}

func (o *DeleteNotificationUnprocessableEntity) String() string {
	return fmt.Sprintf("[DELETE /notification][%d] deleteNotificationUnprocessableEntity  %+v", 422, o.Payload)
}

func (o *DeleteNotificationUnprocessableEntity) GetPayload() *models.APIErrorRenderExample {
	return o.Payload
}

func (o *DeleteNotificationUnprocessableEntity) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIErrorRenderExample)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteNotificationInternalServerError creates a DeleteNotificationInternalServerError with default headers values
func NewDeleteNotificationInternalServerError() *DeleteNotificationInternalServerError {
	return &DeleteNotificationInternalServerError{}
}

/*
DeleteNotificationInternalServerError describes a response with status code 500, with default header values.

Internal server error
*/
type DeleteNotificationInternalServerError struct {
	Payload *models.APIErrorInternalServerExample
}

// IsSuccess returns true when this delete notification internal server error response has a 2xx status code
func (o *DeleteNotificationInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete notification internal server error response has a 3xx status code
func (o *DeleteNotificationInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete notification internal server error response has a 4xx status code
func (o *DeleteNotificationInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this delete notification internal server error response has a 5xx status code
func (o *DeleteNotificationInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this delete notification internal server error response a status code equal to that given
func (o *DeleteNotificationInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the delete notification internal server error response
func (o *DeleteNotificationInternalServerError) Code() int {
	return 500
}

func (o *DeleteNotificationInternalServerError) Error() string {
	return fmt.Sprintf("[DELETE /notification][%d] deleteNotificationInternalServerError  %+v", 500, o.Payload)
}

func (o *DeleteNotificationInternalServerError) String() string {
	return fmt.Sprintf("[DELETE /notification][%d] deleteNotificationInternalServerError  %+v", 500, o.Payload)
}

func (o *DeleteNotificationInternalServerError) GetPayload() *models.APIErrorInternalServerExample {
	return o.Payload
}

func (o *DeleteNotificationInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIErrorInternalServerExample)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
