// Code generated by go-swagger; DO NOT EDIT.

package notification

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/moira-alert/client-go/pkg/models"
)

// GetNotificationsReader is a Reader for the GetNotifications structure.
type GetNotificationsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetNotificationsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetNotificationsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetNotificationsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 422:
		result := NewGetNotificationsUnprocessableEntity()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetNotificationsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /notification] get-notifications", response, response.Code())
	}
}

// NewGetNotificationsOK creates a GetNotificationsOK with default headers values
func NewGetNotificationsOK() *GetNotificationsOK {
	return &GetNotificationsOK{}
}

/*
GetNotificationsOK describes a response with status code 200, with default header values.

Notifications fetched successfully
*/
type GetNotificationsOK struct {
	Payload *models.DtoNotificationsList
}

// IsSuccess returns true when this get notifications o k response has a 2xx status code
func (o *GetNotificationsOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get notifications o k response has a 3xx status code
func (o *GetNotificationsOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get notifications o k response has a 4xx status code
func (o *GetNotificationsOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get notifications o k response has a 5xx status code
func (o *GetNotificationsOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get notifications o k response a status code equal to that given
func (o *GetNotificationsOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get notifications o k response
func (o *GetNotificationsOK) Code() int {
	return 200
}

func (o *GetNotificationsOK) Error() string {
	return fmt.Sprintf("[GET /notification][%d] getNotificationsOK  %+v", 200, o.Payload)
}

func (o *GetNotificationsOK) String() string {
	return fmt.Sprintf("[GET /notification][%d] getNotificationsOK  %+v", 200, o.Payload)
}

func (o *GetNotificationsOK) GetPayload() *models.DtoNotificationsList {
	return o.Payload
}

func (o *GetNotificationsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.DtoNotificationsList)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetNotificationsBadRequest creates a GetNotificationsBadRequest with default headers values
func NewGetNotificationsBadRequest() *GetNotificationsBadRequest {
	return &GetNotificationsBadRequest{}
}

/*
GetNotificationsBadRequest describes a response with status code 400, with default header values.

Bad request from client
*/
type GetNotificationsBadRequest struct {
	Payload *models.APIErrorInvalidRequestExample
}

// IsSuccess returns true when this get notifications bad request response has a 2xx status code
func (o *GetNotificationsBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get notifications bad request response has a 3xx status code
func (o *GetNotificationsBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get notifications bad request response has a 4xx status code
func (o *GetNotificationsBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get notifications bad request response has a 5xx status code
func (o *GetNotificationsBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get notifications bad request response a status code equal to that given
func (o *GetNotificationsBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the get notifications bad request response
func (o *GetNotificationsBadRequest) Code() int {
	return 400
}

func (o *GetNotificationsBadRequest) Error() string {
	return fmt.Sprintf("[GET /notification][%d] getNotificationsBadRequest  %+v", 400, o.Payload)
}

func (o *GetNotificationsBadRequest) String() string {
	return fmt.Sprintf("[GET /notification][%d] getNotificationsBadRequest  %+v", 400, o.Payload)
}

func (o *GetNotificationsBadRequest) GetPayload() *models.APIErrorInvalidRequestExample {
	return o.Payload
}

func (o *GetNotificationsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIErrorInvalidRequestExample)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetNotificationsUnprocessableEntity creates a GetNotificationsUnprocessableEntity with default headers values
func NewGetNotificationsUnprocessableEntity() *GetNotificationsUnprocessableEntity {
	return &GetNotificationsUnprocessableEntity{}
}

/*
GetNotificationsUnprocessableEntity describes a response with status code 422, with default header values.

Render error
*/
type GetNotificationsUnprocessableEntity struct {
	Payload *models.APIErrorRenderExample
}

// IsSuccess returns true when this get notifications unprocessable entity response has a 2xx status code
func (o *GetNotificationsUnprocessableEntity) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get notifications unprocessable entity response has a 3xx status code
func (o *GetNotificationsUnprocessableEntity) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get notifications unprocessable entity response has a 4xx status code
func (o *GetNotificationsUnprocessableEntity) IsClientError() bool {
	return true
}

// IsServerError returns true when this get notifications unprocessable entity response has a 5xx status code
func (o *GetNotificationsUnprocessableEntity) IsServerError() bool {
	return false
}

// IsCode returns true when this get notifications unprocessable entity response a status code equal to that given
func (o *GetNotificationsUnprocessableEntity) IsCode(code int) bool {
	return code == 422
}

// Code gets the status code for the get notifications unprocessable entity response
func (o *GetNotificationsUnprocessableEntity) Code() int {
	return 422
}

func (o *GetNotificationsUnprocessableEntity) Error() string {
	return fmt.Sprintf("[GET /notification][%d] getNotificationsUnprocessableEntity  %+v", 422, o.Payload)
}

func (o *GetNotificationsUnprocessableEntity) String() string {
	return fmt.Sprintf("[GET /notification][%d] getNotificationsUnprocessableEntity  %+v", 422, o.Payload)
}

func (o *GetNotificationsUnprocessableEntity) GetPayload() *models.APIErrorRenderExample {
	return o.Payload
}

func (o *GetNotificationsUnprocessableEntity) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIErrorRenderExample)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetNotificationsInternalServerError creates a GetNotificationsInternalServerError with default headers values
func NewGetNotificationsInternalServerError() *GetNotificationsInternalServerError {
	return &GetNotificationsInternalServerError{}
}

/*
GetNotificationsInternalServerError describes a response with status code 500, with default header values.

Internal server error
*/
type GetNotificationsInternalServerError struct {
	Payload *models.APIErrorInternalServerExample
}

// IsSuccess returns true when this get notifications internal server error response has a 2xx status code
func (o *GetNotificationsInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get notifications internal server error response has a 3xx status code
func (o *GetNotificationsInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get notifications internal server error response has a 4xx status code
func (o *GetNotificationsInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get notifications internal server error response has a 5xx status code
func (o *GetNotificationsInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get notifications internal server error response a status code equal to that given
func (o *GetNotificationsInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the get notifications internal server error response
func (o *GetNotificationsInternalServerError) Code() int {
	return 500
}

func (o *GetNotificationsInternalServerError) Error() string {
	return fmt.Sprintf("[GET /notification][%d] getNotificationsInternalServerError  %+v", 500, o.Payload)
}

func (o *GetNotificationsInternalServerError) String() string {
	return fmt.Sprintf("[GET /notification][%d] getNotificationsInternalServerError  %+v", 500, o.Payload)
}

func (o *GetNotificationsInternalServerError) GetPayload() *models.APIErrorInternalServerExample {
	return o.Payload
}

func (o *GetNotificationsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIErrorInternalServerExample)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
