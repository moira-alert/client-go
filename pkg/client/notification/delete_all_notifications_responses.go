// Code generated by go-swagger; DO NOT EDIT.

package notification

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/moira-alert/client-go/pkg/models"
)

// DeleteAllNotificationsReader is a Reader for the DeleteAllNotifications structure.
type DeleteAllNotificationsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteAllNotificationsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewDeleteAllNotificationsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 403:
		result := NewDeleteAllNotificationsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewDeleteAllNotificationsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[DELETE /notification] delete-all-notifications", response, response.Code())
	}
}

// NewDeleteAllNotificationsOK creates a DeleteAllNotificationsOK with default headers values
func NewDeleteAllNotificationsOK() *DeleteAllNotificationsOK {
	return &DeleteAllNotificationsOK{}
}

/*
DeleteAllNotificationsOK describes a response with status code 200, with default header values.

Notification have been deleted
*/
type DeleteAllNotificationsOK struct {
	Payload *models.DtoNotificationsList
}

// IsSuccess returns true when this delete all notifications o k response has a 2xx status code
func (o *DeleteAllNotificationsOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this delete all notifications o k response has a 3xx status code
func (o *DeleteAllNotificationsOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete all notifications o k response has a 4xx status code
func (o *DeleteAllNotificationsOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this delete all notifications o k response has a 5xx status code
func (o *DeleteAllNotificationsOK) IsServerError() bool {
	return false
}

// IsCode returns true when this delete all notifications o k response a status code equal to that given
func (o *DeleteAllNotificationsOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the delete all notifications o k response
func (o *DeleteAllNotificationsOK) Code() int {
	return 200
}

func (o *DeleteAllNotificationsOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /notification][%d] deleteAllNotificationsOK %s", 200, payload)
}

func (o *DeleteAllNotificationsOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /notification][%d] deleteAllNotificationsOK %s", 200, payload)
}

func (o *DeleteAllNotificationsOK) GetPayload() *models.DtoNotificationsList {
	return o.Payload
}

func (o *DeleteAllNotificationsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.DtoNotificationsList)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteAllNotificationsForbidden creates a DeleteAllNotificationsForbidden with default headers values
func NewDeleteAllNotificationsForbidden() *DeleteAllNotificationsForbidden {
	return &DeleteAllNotificationsForbidden{}
}

/*
DeleteAllNotificationsForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type DeleteAllNotificationsForbidden struct {
	Payload *models.APIErrorForbiddenExample
}

// IsSuccess returns true when this delete all notifications forbidden response has a 2xx status code
func (o *DeleteAllNotificationsForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete all notifications forbidden response has a 3xx status code
func (o *DeleteAllNotificationsForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete all notifications forbidden response has a 4xx status code
func (o *DeleteAllNotificationsForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete all notifications forbidden response has a 5xx status code
func (o *DeleteAllNotificationsForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this delete all notifications forbidden response a status code equal to that given
func (o *DeleteAllNotificationsForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the delete all notifications forbidden response
func (o *DeleteAllNotificationsForbidden) Code() int {
	return 403
}

func (o *DeleteAllNotificationsForbidden) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /notification][%d] deleteAllNotificationsForbidden %s", 403, payload)
}

func (o *DeleteAllNotificationsForbidden) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /notification][%d] deleteAllNotificationsForbidden %s", 403, payload)
}

func (o *DeleteAllNotificationsForbidden) GetPayload() *models.APIErrorForbiddenExample {
	return o.Payload
}

func (o *DeleteAllNotificationsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIErrorForbiddenExample)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteAllNotificationsInternalServerError creates a DeleteAllNotificationsInternalServerError with default headers values
func NewDeleteAllNotificationsInternalServerError() *DeleteAllNotificationsInternalServerError {
	return &DeleteAllNotificationsInternalServerError{}
}

/*
DeleteAllNotificationsInternalServerError describes a response with status code 500, with default header values.

Internal server error
*/
type DeleteAllNotificationsInternalServerError struct {
	Payload *models.APIErrorInternalServerExample
}

// IsSuccess returns true when this delete all notifications internal server error response has a 2xx status code
func (o *DeleteAllNotificationsInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete all notifications internal server error response has a 3xx status code
func (o *DeleteAllNotificationsInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete all notifications internal server error response has a 4xx status code
func (o *DeleteAllNotificationsInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this delete all notifications internal server error response has a 5xx status code
func (o *DeleteAllNotificationsInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this delete all notifications internal server error response a status code equal to that given
func (o *DeleteAllNotificationsInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the delete all notifications internal server error response
func (o *DeleteAllNotificationsInternalServerError) Code() int {
	return 500
}

func (o *DeleteAllNotificationsInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /notification][%d] deleteAllNotificationsInternalServerError %s", 500, payload)
}

func (o *DeleteAllNotificationsInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /notification][%d] deleteAllNotificationsInternalServerError %s", 500, payload)
}

func (o *DeleteAllNotificationsInternalServerError) GetPayload() *models.APIErrorInternalServerExample {
	return o.Payload
}

func (o *DeleteAllNotificationsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIErrorInternalServerExample)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
