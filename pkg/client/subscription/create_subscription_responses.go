// Code generated by go-swagger; DO NOT EDIT.

package subscription

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/moira-alert/client-go/pkg/models"
)

// CreateSubscriptionReader is a Reader for the CreateSubscription structure.
type CreateSubscriptionReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *CreateSubscriptionReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewCreateSubscriptionOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewCreateSubscriptionBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 422:
		result := NewCreateSubscriptionUnprocessableEntity()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewCreateSubscriptionInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[PUT /subscription] create-subscription", response, response.Code())
	}
}

// NewCreateSubscriptionOK creates a CreateSubscriptionOK with default headers values
func NewCreateSubscriptionOK() *CreateSubscriptionOK {
	return &CreateSubscriptionOK{}
}

/*
CreateSubscriptionOK describes a response with status code 200, with default header values.

Subscription created successfully
*/
type CreateSubscriptionOK struct {
	Payload *models.DtoSubscription
}

// IsSuccess returns true when this create subscription o k response has a 2xx status code
func (o *CreateSubscriptionOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this create subscription o k response has a 3xx status code
func (o *CreateSubscriptionOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create subscription o k response has a 4xx status code
func (o *CreateSubscriptionOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this create subscription o k response has a 5xx status code
func (o *CreateSubscriptionOK) IsServerError() bool {
	return false
}

// IsCode returns true when this create subscription o k response a status code equal to that given
func (o *CreateSubscriptionOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the create subscription o k response
func (o *CreateSubscriptionOK) Code() int {
	return 200
}

func (o *CreateSubscriptionOK) Error() string {
	return fmt.Sprintf("[PUT /subscription][%d] createSubscriptionOK  %+v", 200, o.Payload)
}

func (o *CreateSubscriptionOK) String() string {
	return fmt.Sprintf("[PUT /subscription][%d] createSubscriptionOK  %+v", 200, o.Payload)
}

func (o *CreateSubscriptionOK) GetPayload() *models.DtoSubscription {
	return o.Payload
}

func (o *CreateSubscriptionOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.DtoSubscription)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateSubscriptionBadRequest creates a CreateSubscriptionBadRequest with default headers values
func NewCreateSubscriptionBadRequest() *CreateSubscriptionBadRequest {
	return &CreateSubscriptionBadRequest{}
}

/*
CreateSubscriptionBadRequest describes a response with status code 400, with default header values.

Bad request from client
*/
type CreateSubscriptionBadRequest struct {
	Payload *models.APIErrorInvalidRequestExample
}

// IsSuccess returns true when this create subscription bad request response has a 2xx status code
func (o *CreateSubscriptionBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create subscription bad request response has a 3xx status code
func (o *CreateSubscriptionBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create subscription bad request response has a 4xx status code
func (o *CreateSubscriptionBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this create subscription bad request response has a 5xx status code
func (o *CreateSubscriptionBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this create subscription bad request response a status code equal to that given
func (o *CreateSubscriptionBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the create subscription bad request response
func (o *CreateSubscriptionBadRequest) Code() int {
	return 400
}

func (o *CreateSubscriptionBadRequest) Error() string {
	return fmt.Sprintf("[PUT /subscription][%d] createSubscriptionBadRequest  %+v", 400, o.Payload)
}

func (o *CreateSubscriptionBadRequest) String() string {
	return fmt.Sprintf("[PUT /subscription][%d] createSubscriptionBadRequest  %+v", 400, o.Payload)
}

func (o *CreateSubscriptionBadRequest) GetPayload() *models.APIErrorInvalidRequestExample {
	return o.Payload
}

func (o *CreateSubscriptionBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIErrorInvalidRequestExample)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateSubscriptionUnprocessableEntity creates a CreateSubscriptionUnprocessableEntity with default headers values
func NewCreateSubscriptionUnprocessableEntity() *CreateSubscriptionUnprocessableEntity {
	return &CreateSubscriptionUnprocessableEntity{}
}

/*
CreateSubscriptionUnprocessableEntity describes a response with status code 422, with default header values.

Render error
*/
type CreateSubscriptionUnprocessableEntity struct {
	Payload *models.APIErrorRenderExample
}

// IsSuccess returns true when this create subscription unprocessable entity response has a 2xx status code
func (o *CreateSubscriptionUnprocessableEntity) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create subscription unprocessable entity response has a 3xx status code
func (o *CreateSubscriptionUnprocessableEntity) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create subscription unprocessable entity response has a 4xx status code
func (o *CreateSubscriptionUnprocessableEntity) IsClientError() bool {
	return true
}

// IsServerError returns true when this create subscription unprocessable entity response has a 5xx status code
func (o *CreateSubscriptionUnprocessableEntity) IsServerError() bool {
	return false
}

// IsCode returns true when this create subscription unprocessable entity response a status code equal to that given
func (o *CreateSubscriptionUnprocessableEntity) IsCode(code int) bool {
	return code == 422
}

// Code gets the status code for the create subscription unprocessable entity response
func (o *CreateSubscriptionUnprocessableEntity) Code() int {
	return 422
}

func (o *CreateSubscriptionUnprocessableEntity) Error() string {
	return fmt.Sprintf("[PUT /subscription][%d] createSubscriptionUnprocessableEntity  %+v", 422, o.Payload)
}

func (o *CreateSubscriptionUnprocessableEntity) String() string {
	return fmt.Sprintf("[PUT /subscription][%d] createSubscriptionUnprocessableEntity  %+v", 422, o.Payload)
}

func (o *CreateSubscriptionUnprocessableEntity) GetPayload() *models.APIErrorRenderExample {
	return o.Payload
}

func (o *CreateSubscriptionUnprocessableEntity) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIErrorRenderExample)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateSubscriptionInternalServerError creates a CreateSubscriptionInternalServerError with default headers values
func NewCreateSubscriptionInternalServerError() *CreateSubscriptionInternalServerError {
	return &CreateSubscriptionInternalServerError{}
}

/*
CreateSubscriptionInternalServerError describes a response with status code 500, with default header values.

Internal server error
*/
type CreateSubscriptionInternalServerError struct {
	Payload *models.APIErrorInternalServerExample
}

// IsSuccess returns true when this create subscription internal server error response has a 2xx status code
func (o *CreateSubscriptionInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create subscription internal server error response has a 3xx status code
func (o *CreateSubscriptionInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create subscription internal server error response has a 4xx status code
func (o *CreateSubscriptionInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this create subscription internal server error response has a 5xx status code
func (o *CreateSubscriptionInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this create subscription internal server error response a status code equal to that given
func (o *CreateSubscriptionInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the create subscription internal server error response
func (o *CreateSubscriptionInternalServerError) Code() int {
	return 500
}

func (o *CreateSubscriptionInternalServerError) Error() string {
	return fmt.Sprintf("[PUT /subscription][%d] createSubscriptionInternalServerError  %+v", 500, o.Payload)
}

func (o *CreateSubscriptionInternalServerError) String() string {
	return fmt.Sprintf("[PUT /subscription][%d] createSubscriptionInternalServerError  %+v", 500, o.Payload)
}

func (o *CreateSubscriptionInternalServerError) GetPayload() *models.APIErrorInternalServerExample {
	return o.Payload
}

func (o *CreateSubscriptionInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIErrorInternalServerExample)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
