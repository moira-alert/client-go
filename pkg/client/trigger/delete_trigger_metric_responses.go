// Code generated by go-swagger; DO NOT EDIT.

package trigger

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/moira-alert/client-go/pkg/models"
)

// DeleteTriggerMetricReader is a Reader for the DeleteTriggerMetric structure.
type DeleteTriggerMetricReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteTriggerMetricReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewDeleteTriggerMetricOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewDeleteTriggerMetricBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewDeleteTriggerMetricNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewDeleteTriggerMetricInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[DELETE /trigger/{triggerID}/metrics] delete-trigger-metric", response, response.Code())
	}
}

// NewDeleteTriggerMetricOK creates a DeleteTriggerMetricOK with default headers values
func NewDeleteTriggerMetricOK() *DeleteTriggerMetricOK {
	return &DeleteTriggerMetricOK{}
}

/*
DeleteTriggerMetricOK describes a response with status code 200, with default header values.

Trigger metric deleted successfully
*/
type DeleteTriggerMetricOK struct {
}

// IsSuccess returns true when this delete trigger metric o k response has a 2xx status code
func (o *DeleteTriggerMetricOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this delete trigger metric o k response has a 3xx status code
func (o *DeleteTriggerMetricOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete trigger metric o k response has a 4xx status code
func (o *DeleteTriggerMetricOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this delete trigger metric o k response has a 5xx status code
func (o *DeleteTriggerMetricOK) IsServerError() bool {
	return false
}

// IsCode returns true when this delete trigger metric o k response a status code equal to that given
func (o *DeleteTriggerMetricOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the delete trigger metric o k response
func (o *DeleteTriggerMetricOK) Code() int {
	return 200
}

func (o *DeleteTriggerMetricOK) Error() string {
	return fmt.Sprintf("[DELETE /trigger/{triggerID}/metrics][%d] deleteTriggerMetricOK", 200)
}

func (o *DeleteTriggerMetricOK) String() string {
	return fmt.Sprintf("[DELETE /trigger/{triggerID}/metrics][%d] deleteTriggerMetricOK", 200)
}

func (o *DeleteTriggerMetricOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteTriggerMetricBadRequest creates a DeleteTriggerMetricBadRequest with default headers values
func NewDeleteTriggerMetricBadRequest() *DeleteTriggerMetricBadRequest {
	return &DeleteTriggerMetricBadRequest{}
}

/*
DeleteTriggerMetricBadRequest describes a response with status code 400, with default header values.

Bad request from client
*/
type DeleteTriggerMetricBadRequest struct {
	Payload *models.APIErrorInvalidRequestExample
}

// IsSuccess returns true when this delete trigger metric bad request response has a 2xx status code
func (o *DeleteTriggerMetricBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete trigger metric bad request response has a 3xx status code
func (o *DeleteTriggerMetricBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete trigger metric bad request response has a 4xx status code
func (o *DeleteTriggerMetricBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete trigger metric bad request response has a 5xx status code
func (o *DeleteTriggerMetricBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this delete trigger metric bad request response a status code equal to that given
func (o *DeleteTriggerMetricBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the delete trigger metric bad request response
func (o *DeleteTriggerMetricBadRequest) Code() int {
	return 400
}

func (o *DeleteTriggerMetricBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /trigger/{triggerID}/metrics][%d] deleteTriggerMetricBadRequest %s", 400, payload)
}

func (o *DeleteTriggerMetricBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /trigger/{triggerID}/metrics][%d] deleteTriggerMetricBadRequest %s", 400, payload)
}

func (o *DeleteTriggerMetricBadRequest) GetPayload() *models.APIErrorInvalidRequestExample {
	return o.Payload
}

func (o *DeleteTriggerMetricBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIErrorInvalidRequestExample)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteTriggerMetricNotFound creates a DeleteTriggerMetricNotFound with default headers values
func NewDeleteTriggerMetricNotFound() *DeleteTriggerMetricNotFound {
	return &DeleteTriggerMetricNotFound{}
}

/*
DeleteTriggerMetricNotFound describes a response with status code 404, with default header values.

Resource not found
*/
type DeleteTriggerMetricNotFound struct {
	Payload *models.APIErrorNotFoundExample
}

// IsSuccess returns true when this delete trigger metric not found response has a 2xx status code
func (o *DeleteTriggerMetricNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete trigger metric not found response has a 3xx status code
func (o *DeleteTriggerMetricNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete trigger metric not found response has a 4xx status code
func (o *DeleteTriggerMetricNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete trigger metric not found response has a 5xx status code
func (o *DeleteTriggerMetricNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this delete trigger metric not found response a status code equal to that given
func (o *DeleteTriggerMetricNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the delete trigger metric not found response
func (o *DeleteTriggerMetricNotFound) Code() int {
	return 404
}

func (o *DeleteTriggerMetricNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /trigger/{triggerID}/metrics][%d] deleteTriggerMetricNotFound %s", 404, payload)
}

func (o *DeleteTriggerMetricNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /trigger/{triggerID}/metrics][%d] deleteTriggerMetricNotFound %s", 404, payload)
}

func (o *DeleteTriggerMetricNotFound) GetPayload() *models.APIErrorNotFoundExample {
	return o.Payload
}

func (o *DeleteTriggerMetricNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIErrorNotFoundExample)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteTriggerMetricInternalServerError creates a DeleteTriggerMetricInternalServerError with default headers values
func NewDeleteTriggerMetricInternalServerError() *DeleteTriggerMetricInternalServerError {
	return &DeleteTriggerMetricInternalServerError{}
}

/*
DeleteTriggerMetricInternalServerError describes a response with status code 500, with default header values.

Internal server error
*/
type DeleteTriggerMetricInternalServerError struct {
	Payload *models.APIErrorInternalServerExample
}

// IsSuccess returns true when this delete trigger metric internal server error response has a 2xx status code
func (o *DeleteTriggerMetricInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete trigger metric internal server error response has a 3xx status code
func (o *DeleteTriggerMetricInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete trigger metric internal server error response has a 4xx status code
func (o *DeleteTriggerMetricInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this delete trigger metric internal server error response has a 5xx status code
func (o *DeleteTriggerMetricInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this delete trigger metric internal server error response a status code equal to that given
func (o *DeleteTriggerMetricInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the delete trigger metric internal server error response
func (o *DeleteTriggerMetricInternalServerError) Code() int {
	return 500
}

func (o *DeleteTriggerMetricInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /trigger/{triggerID}/metrics][%d] deleteTriggerMetricInternalServerError %s", 500, payload)
}

func (o *DeleteTriggerMetricInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /trigger/{triggerID}/metrics][%d] deleteTriggerMetricInternalServerError %s", 500, payload)
}

func (o *DeleteTriggerMetricInternalServerError) GetPayload() *models.APIErrorInternalServerExample {
	return o.Payload
}

func (o *DeleteTriggerMetricInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIErrorInternalServerExample)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
