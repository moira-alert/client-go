// Code generated by go-swagger; DO NOT EDIT.

package trigger

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// NewGetTriggersNoisinessParams creates a new GetTriggersNoisinessParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewGetTriggersNoisinessParams() *GetTriggersNoisinessParams {
	return &GetTriggersNoisinessParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewGetTriggersNoisinessParamsWithTimeout creates a new GetTriggersNoisinessParams object
// with the ability to set a timeout on a request.
func NewGetTriggersNoisinessParamsWithTimeout(timeout time.Duration) *GetTriggersNoisinessParams {
	return &GetTriggersNoisinessParams{
		timeout: timeout,
	}
}

// NewGetTriggersNoisinessParamsWithContext creates a new GetTriggersNoisinessParams object
// with the ability to set a context for a request.
func NewGetTriggersNoisinessParamsWithContext(ctx context.Context) *GetTriggersNoisinessParams {
	return &GetTriggersNoisinessParams{
		Context: ctx,
	}
}

// NewGetTriggersNoisinessParamsWithHTTPClient creates a new GetTriggersNoisinessParams object
// with the ability to set a custom HTTPClient for a request.
func NewGetTriggersNoisinessParamsWithHTTPClient(client *http.Client) *GetTriggersNoisinessParams {
	return &GetTriggersNoisinessParams{
		HTTPClient: client,
	}
}

/*
GetTriggersNoisinessParams contains all the parameters to send to the API endpoint

	for the get triggers noisiness operation.

	Typically these are written to a http.Request.
*/
type GetTriggersNoisinessParams struct {

	/* From.

	   Start time of the time range

	   Default: "-3hours"
	*/
	From *string

	/* P.

	   Defines the number of the displayed page. E.g, p=2 would display the 2nd page
	*/
	P *int64

	/* Size.

	   Number of items to be displayed on one page. if size = -1 then all events returned

	   Default: 100
	*/
	Size *int64

	/* Sort.

	   String to set sort order (by events_count). On empty - no order, asc - ascending, desc - descending

	   Default: "desc"
	*/
	Sort *string

	/* To.

	   End time of the time range

	   Default: "now"
	*/
	To *string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the get triggers noisiness params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *GetTriggersNoisinessParams) WithDefaults() *GetTriggersNoisinessParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the get triggers noisiness params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *GetTriggersNoisinessParams) SetDefaults() {
	var (
		fromDefault = string("-3hours")

		pDefault = int64(0)

		sizeDefault = int64(100)

		sortDefault = string("desc")

		toDefault = string("now")
	)

	val := GetTriggersNoisinessParams{
		From: &fromDefault,
		P:    &pDefault,
		Size: &sizeDefault,
		Sort: &sortDefault,
		To:   &toDefault,
	}

	val.timeout = o.timeout
	val.Context = o.Context
	val.HTTPClient = o.HTTPClient
	*o = val
}

// WithTimeout adds the timeout to the get triggers noisiness params
func (o *GetTriggersNoisinessParams) WithTimeout(timeout time.Duration) *GetTriggersNoisinessParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the get triggers noisiness params
func (o *GetTriggersNoisinessParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the get triggers noisiness params
func (o *GetTriggersNoisinessParams) WithContext(ctx context.Context) *GetTriggersNoisinessParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the get triggers noisiness params
func (o *GetTriggersNoisinessParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the get triggers noisiness params
func (o *GetTriggersNoisinessParams) WithHTTPClient(client *http.Client) *GetTriggersNoisinessParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the get triggers noisiness params
func (o *GetTriggersNoisinessParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithFrom adds the from to the get triggers noisiness params
func (o *GetTriggersNoisinessParams) WithFrom(from *string) *GetTriggersNoisinessParams {
	o.SetFrom(from)
	return o
}

// SetFrom adds the from to the get triggers noisiness params
func (o *GetTriggersNoisinessParams) SetFrom(from *string) {
	o.From = from
}

// WithP adds the p to the get triggers noisiness params
func (o *GetTriggersNoisinessParams) WithP(p *int64) *GetTriggersNoisinessParams {
	o.SetP(p)
	return o
}

// SetP adds the p to the get triggers noisiness params
func (o *GetTriggersNoisinessParams) SetP(p *int64) {
	o.P = p
}

// WithSize adds the size to the get triggers noisiness params
func (o *GetTriggersNoisinessParams) WithSize(size *int64) *GetTriggersNoisinessParams {
	o.SetSize(size)
	return o
}

// SetSize adds the size to the get triggers noisiness params
func (o *GetTriggersNoisinessParams) SetSize(size *int64) {
	o.Size = size
}

// WithSort adds the sort to the get triggers noisiness params
func (o *GetTriggersNoisinessParams) WithSort(sort *string) *GetTriggersNoisinessParams {
	o.SetSort(sort)
	return o
}

// SetSort adds the sort to the get triggers noisiness params
func (o *GetTriggersNoisinessParams) SetSort(sort *string) {
	o.Sort = sort
}

// WithTo adds the to to the get triggers noisiness params
func (o *GetTriggersNoisinessParams) WithTo(to *string) *GetTriggersNoisinessParams {
	o.SetTo(to)
	return o
}

// SetTo adds the to to the get triggers noisiness params
func (o *GetTriggersNoisinessParams) SetTo(to *string) {
	o.To = to
}

// WriteToRequest writes these params to a swagger request
func (o *GetTriggersNoisinessParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.From != nil {

		// query param from
		var qrFrom string

		if o.From != nil {
			qrFrom = *o.From
		}
		qFrom := qrFrom
		if qFrom != "" {

			if err := r.SetQueryParam("from", qFrom); err != nil {
				return err
			}
		}
	}

	if o.P != nil {

		// query param p
		var qrP int64

		if o.P != nil {
			qrP = *o.P
		}
		qP := swag.FormatInt64(qrP)
		if qP != "" {

			if err := r.SetQueryParam("p", qP); err != nil {
				return err
			}
		}
	}

	if o.Size != nil {

		// query param size
		var qrSize int64

		if o.Size != nil {
			qrSize = *o.Size
		}
		qSize := swag.FormatInt64(qrSize)
		if qSize != "" {

			if err := r.SetQueryParam("size", qSize); err != nil {
				return err
			}
		}
	}

	if o.Sort != nil {

		// query param sort
		var qrSort string

		if o.Sort != nil {
			qrSort = *o.Sort
		}
		qSort := qrSort
		if qSort != "" {

			if err := r.SetQueryParam("sort", qSort); err != nil {
				return err
			}
		}
	}

	if o.To != nil {

		// query param to
		var qrTo string

		if o.To != nil {
			qrTo = *o.To
		}
		qTo := qrTo
		if qTo != "" {

			if err := r.SetQueryParam("to", qTo); err != nil {
				return err
			}
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
