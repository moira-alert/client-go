// Code generated by go-swagger; DO NOT EDIT.

package trigger

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/moira-alert/client-go/pkg/models"
)

// DeleteTriggerThrottlingReader is a Reader for the DeleteTriggerThrottling structure.
type DeleteTriggerThrottlingReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteTriggerThrottlingReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewDeleteTriggerThrottlingOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 404:
		result := NewDeleteTriggerThrottlingNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewDeleteTriggerThrottlingInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[DELETE /trigger/{triggerID}/throttling] delete-trigger-throttling", response, response.Code())
	}
}

// NewDeleteTriggerThrottlingOK creates a DeleteTriggerThrottlingOK with default headers values
func NewDeleteTriggerThrottlingOK() *DeleteTriggerThrottlingOK {
	return &DeleteTriggerThrottlingOK{}
}

/*
DeleteTriggerThrottlingOK describes a response with status code 200, with default header values.

Trigger throttling has been deleted
*/
type DeleteTriggerThrottlingOK struct {
}

// IsSuccess returns true when this delete trigger throttling o k response has a 2xx status code
func (o *DeleteTriggerThrottlingOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this delete trigger throttling o k response has a 3xx status code
func (o *DeleteTriggerThrottlingOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete trigger throttling o k response has a 4xx status code
func (o *DeleteTriggerThrottlingOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this delete trigger throttling o k response has a 5xx status code
func (o *DeleteTriggerThrottlingOK) IsServerError() bool {
	return false
}

// IsCode returns true when this delete trigger throttling o k response a status code equal to that given
func (o *DeleteTriggerThrottlingOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the delete trigger throttling o k response
func (o *DeleteTriggerThrottlingOK) Code() int {
	return 200
}

func (o *DeleteTriggerThrottlingOK) Error() string {
	return fmt.Sprintf("[DELETE /trigger/{triggerID}/throttling][%d] deleteTriggerThrottlingOK", 200)
}

func (o *DeleteTriggerThrottlingOK) String() string {
	return fmt.Sprintf("[DELETE /trigger/{triggerID}/throttling][%d] deleteTriggerThrottlingOK", 200)
}

func (o *DeleteTriggerThrottlingOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteTriggerThrottlingNotFound creates a DeleteTriggerThrottlingNotFound with default headers values
func NewDeleteTriggerThrottlingNotFound() *DeleteTriggerThrottlingNotFound {
	return &DeleteTriggerThrottlingNotFound{}
}

/*
DeleteTriggerThrottlingNotFound describes a response with status code 404, with default header values.

Resource not found
*/
type DeleteTriggerThrottlingNotFound struct {
	Payload *models.APIErrorNotFoundExample
}

// IsSuccess returns true when this delete trigger throttling not found response has a 2xx status code
func (o *DeleteTriggerThrottlingNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete trigger throttling not found response has a 3xx status code
func (o *DeleteTriggerThrottlingNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete trigger throttling not found response has a 4xx status code
func (o *DeleteTriggerThrottlingNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete trigger throttling not found response has a 5xx status code
func (o *DeleteTriggerThrottlingNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this delete trigger throttling not found response a status code equal to that given
func (o *DeleteTriggerThrottlingNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the delete trigger throttling not found response
func (o *DeleteTriggerThrottlingNotFound) Code() int {
	return 404
}

func (o *DeleteTriggerThrottlingNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /trigger/{triggerID}/throttling][%d] deleteTriggerThrottlingNotFound %s", 404, payload)
}

func (o *DeleteTriggerThrottlingNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /trigger/{triggerID}/throttling][%d] deleteTriggerThrottlingNotFound %s", 404, payload)
}

func (o *DeleteTriggerThrottlingNotFound) GetPayload() *models.APIErrorNotFoundExample {
	return o.Payload
}

func (o *DeleteTriggerThrottlingNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIErrorNotFoundExample)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteTriggerThrottlingInternalServerError creates a DeleteTriggerThrottlingInternalServerError with default headers values
func NewDeleteTriggerThrottlingInternalServerError() *DeleteTriggerThrottlingInternalServerError {
	return &DeleteTriggerThrottlingInternalServerError{}
}

/*
DeleteTriggerThrottlingInternalServerError describes a response with status code 500, with default header values.

Internal server error
*/
type DeleteTriggerThrottlingInternalServerError struct {
	Payload *models.APIErrorInternalServerExample
}

// IsSuccess returns true when this delete trigger throttling internal server error response has a 2xx status code
func (o *DeleteTriggerThrottlingInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete trigger throttling internal server error response has a 3xx status code
func (o *DeleteTriggerThrottlingInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete trigger throttling internal server error response has a 4xx status code
func (o *DeleteTriggerThrottlingInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this delete trigger throttling internal server error response has a 5xx status code
func (o *DeleteTriggerThrottlingInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this delete trigger throttling internal server error response a status code equal to that given
func (o *DeleteTriggerThrottlingInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the delete trigger throttling internal server error response
func (o *DeleteTriggerThrottlingInternalServerError) Code() int {
	return 500
}

func (o *DeleteTriggerThrottlingInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /trigger/{triggerID}/throttling][%d] deleteTriggerThrottlingInternalServerError %s", 500, payload)
}

func (o *DeleteTriggerThrottlingInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /trigger/{triggerID}/throttling][%d] deleteTriggerThrottlingInternalServerError %s", 500, payload)
}

func (o *DeleteTriggerThrottlingInternalServerError) GetPayload() *models.APIErrorInternalServerExample {
	return o.Payload
}

func (o *DeleteTriggerThrottlingInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIErrorInternalServerExample)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
