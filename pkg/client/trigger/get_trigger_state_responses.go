// Code generated by go-swagger; DO NOT EDIT.

package trigger

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/moira-alert/client-go/pkg/models"
)

// GetTriggerStateReader is a Reader for the GetTriggerState structure.
type GetTriggerStateReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetTriggerStateReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetTriggerStateOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 404:
		result := NewGetTriggerStateNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 422:
		result := NewGetTriggerStateUnprocessableEntity()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetTriggerStateInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /trigger/{triggerID}/state] get-trigger-state", response, response.Code())
	}
}

// NewGetTriggerStateOK creates a GetTriggerStateOK with default headers values
func NewGetTriggerStateOK() *GetTriggerStateOK {
	return &GetTriggerStateOK{}
}

/*
GetTriggerStateOK describes a response with status code 200, with default header values.

Trigger state fetched successful
*/
type GetTriggerStateOK struct {
	Payload *models.DtoTriggerCheck
}

// IsSuccess returns true when this get trigger state o k response has a 2xx status code
func (o *GetTriggerStateOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get trigger state o k response has a 3xx status code
func (o *GetTriggerStateOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get trigger state o k response has a 4xx status code
func (o *GetTriggerStateOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get trigger state o k response has a 5xx status code
func (o *GetTriggerStateOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get trigger state o k response a status code equal to that given
func (o *GetTriggerStateOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get trigger state o k response
func (o *GetTriggerStateOK) Code() int {
	return 200
}

func (o *GetTriggerStateOK) Error() string {
	return fmt.Sprintf("[GET /trigger/{triggerID}/state][%d] getTriggerStateOK  %+v", 200, o.Payload)
}

func (o *GetTriggerStateOK) String() string {
	return fmt.Sprintf("[GET /trigger/{triggerID}/state][%d] getTriggerStateOK  %+v", 200, o.Payload)
}

func (o *GetTriggerStateOK) GetPayload() *models.DtoTriggerCheck {
	return o.Payload
}

func (o *GetTriggerStateOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.DtoTriggerCheck)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetTriggerStateNotFound creates a GetTriggerStateNotFound with default headers values
func NewGetTriggerStateNotFound() *GetTriggerStateNotFound {
	return &GetTriggerStateNotFound{}
}

/*
GetTriggerStateNotFound describes a response with status code 404, with default header values.

Resource not found
*/
type GetTriggerStateNotFound struct {
	Payload *models.APIErrorNotFoundExample
}

// IsSuccess returns true when this get trigger state not found response has a 2xx status code
func (o *GetTriggerStateNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get trigger state not found response has a 3xx status code
func (o *GetTriggerStateNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get trigger state not found response has a 4xx status code
func (o *GetTriggerStateNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get trigger state not found response has a 5xx status code
func (o *GetTriggerStateNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get trigger state not found response a status code equal to that given
func (o *GetTriggerStateNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get trigger state not found response
func (o *GetTriggerStateNotFound) Code() int {
	return 404
}

func (o *GetTriggerStateNotFound) Error() string {
	return fmt.Sprintf("[GET /trigger/{triggerID}/state][%d] getTriggerStateNotFound  %+v", 404, o.Payload)
}

func (o *GetTriggerStateNotFound) String() string {
	return fmt.Sprintf("[GET /trigger/{triggerID}/state][%d] getTriggerStateNotFound  %+v", 404, o.Payload)
}

func (o *GetTriggerStateNotFound) GetPayload() *models.APIErrorNotFoundExample {
	return o.Payload
}

func (o *GetTriggerStateNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIErrorNotFoundExample)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetTriggerStateUnprocessableEntity creates a GetTriggerStateUnprocessableEntity with default headers values
func NewGetTriggerStateUnprocessableEntity() *GetTriggerStateUnprocessableEntity {
	return &GetTriggerStateUnprocessableEntity{}
}

/*
GetTriggerStateUnprocessableEntity describes a response with status code 422, with default header values.

Render error
*/
type GetTriggerStateUnprocessableEntity struct {
	Payload *models.APIErrorRenderExample
}

// IsSuccess returns true when this get trigger state unprocessable entity response has a 2xx status code
func (o *GetTriggerStateUnprocessableEntity) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get trigger state unprocessable entity response has a 3xx status code
func (o *GetTriggerStateUnprocessableEntity) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get trigger state unprocessable entity response has a 4xx status code
func (o *GetTriggerStateUnprocessableEntity) IsClientError() bool {
	return true
}

// IsServerError returns true when this get trigger state unprocessable entity response has a 5xx status code
func (o *GetTriggerStateUnprocessableEntity) IsServerError() bool {
	return false
}

// IsCode returns true when this get trigger state unprocessable entity response a status code equal to that given
func (o *GetTriggerStateUnprocessableEntity) IsCode(code int) bool {
	return code == 422
}

// Code gets the status code for the get trigger state unprocessable entity response
func (o *GetTriggerStateUnprocessableEntity) Code() int {
	return 422
}

func (o *GetTriggerStateUnprocessableEntity) Error() string {
	return fmt.Sprintf("[GET /trigger/{triggerID}/state][%d] getTriggerStateUnprocessableEntity  %+v", 422, o.Payload)
}

func (o *GetTriggerStateUnprocessableEntity) String() string {
	return fmt.Sprintf("[GET /trigger/{triggerID}/state][%d] getTriggerStateUnprocessableEntity  %+v", 422, o.Payload)
}

func (o *GetTriggerStateUnprocessableEntity) GetPayload() *models.APIErrorRenderExample {
	return o.Payload
}

func (o *GetTriggerStateUnprocessableEntity) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIErrorRenderExample)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetTriggerStateInternalServerError creates a GetTriggerStateInternalServerError with default headers values
func NewGetTriggerStateInternalServerError() *GetTriggerStateInternalServerError {
	return &GetTriggerStateInternalServerError{}
}

/*
GetTriggerStateInternalServerError describes a response with status code 500, with default header values.

Internal server error
*/
type GetTriggerStateInternalServerError struct {
	Payload *models.APIErrorInternalServerExample
}

// IsSuccess returns true when this get trigger state internal server error response has a 2xx status code
func (o *GetTriggerStateInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get trigger state internal server error response has a 3xx status code
func (o *GetTriggerStateInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get trigger state internal server error response has a 4xx status code
func (o *GetTriggerStateInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get trigger state internal server error response has a 5xx status code
func (o *GetTriggerStateInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get trigger state internal server error response a status code equal to that given
func (o *GetTriggerStateInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the get trigger state internal server error response
func (o *GetTriggerStateInternalServerError) Code() int {
	return 500
}

func (o *GetTriggerStateInternalServerError) Error() string {
	return fmt.Sprintf("[GET /trigger/{triggerID}/state][%d] getTriggerStateInternalServerError  %+v", 500, o.Payload)
}

func (o *GetTriggerStateInternalServerError) String() string {
	return fmt.Sprintf("[GET /trigger/{triggerID}/state][%d] getTriggerStateInternalServerError  %+v", 500, o.Payload)
}

func (o *GetTriggerStateInternalServerError) GetPayload() *models.APIErrorInternalServerExample {
	return o.Payload
}

func (o *GetTriggerStateInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIErrorInternalServerExample)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
