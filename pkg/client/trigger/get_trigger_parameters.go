// Code generated by go-swagger; DO NOT EDIT.

package trigger

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// NewGetTriggerParams creates a new GetTriggerParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewGetTriggerParams() *GetTriggerParams {
	return &GetTriggerParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewGetTriggerParamsWithTimeout creates a new GetTriggerParams object
// with the ability to set a timeout on a request.
func NewGetTriggerParamsWithTimeout(timeout time.Duration) *GetTriggerParams {
	return &GetTriggerParams{
		timeout: timeout,
	}
}

// NewGetTriggerParamsWithContext creates a new GetTriggerParams object
// with the ability to set a context for a request.
func NewGetTriggerParamsWithContext(ctx context.Context) *GetTriggerParams {
	return &GetTriggerParams{
		Context: ctx,
	}
}

// NewGetTriggerParamsWithHTTPClient creates a new GetTriggerParams object
// with the ability to set a custom HTTPClient for a request.
func NewGetTriggerParamsWithHTTPClient(client *http.Client) *GetTriggerParams {
	return &GetTriggerParams{
		HTTPClient: client,
	}
}

/*
GetTriggerParams contains all the parameters to send to the API endpoint

	for the get trigger operation.

	Typically these are written to a http.Request.
*/
type GetTriggerParams struct {

	/* Populated.

	   Populated
	*/
	Populated *bool

	/* TriggerID.

	   Trigger ID

	   Default: "bcba82f5-48cf-44c0-b7d6-e1d32c64a88c"
	*/
	TriggerID string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the get trigger params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *GetTriggerParams) WithDefaults() *GetTriggerParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the get trigger params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *GetTriggerParams) SetDefaults() {
	var (
		populatedDefault = bool(false)

		triggerIDDefault = string("bcba82f5-48cf-44c0-b7d6-e1d32c64a88c")
	)

	val := GetTriggerParams{
		Populated: &populatedDefault,
		TriggerID: triggerIDDefault,
	}

	val.timeout = o.timeout
	val.Context = o.Context
	val.HTTPClient = o.HTTPClient
	*o = val
}

// WithTimeout adds the timeout to the get trigger params
func (o *GetTriggerParams) WithTimeout(timeout time.Duration) *GetTriggerParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the get trigger params
func (o *GetTriggerParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the get trigger params
func (o *GetTriggerParams) WithContext(ctx context.Context) *GetTriggerParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the get trigger params
func (o *GetTriggerParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the get trigger params
func (o *GetTriggerParams) WithHTTPClient(client *http.Client) *GetTriggerParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the get trigger params
func (o *GetTriggerParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithPopulated adds the populated to the get trigger params
func (o *GetTriggerParams) WithPopulated(populated *bool) *GetTriggerParams {
	o.SetPopulated(populated)
	return o
}

// SetPopulated adds the populated to the get trigger params
func (o *GetTriggerParams) SetPopulated(populated *bool) {
	o.Populated = populated
}

// WithTriggerID adds the triggerID to the get trigger params
func (o *GetTriggerParams) WithTriggerID(triggerID string) *GetTriggerParams {
	o.SetTriggerID(triggerID)
	return o
}

// SetTriggerID adds the triggerId to the get trigger params
func (o *GetTriggerParams) SetTriggerID(triggerID string) {
	o.TriggerID = triggerID
}

// WriteToRequest writes these params to a swagger request
func (o *GetTriggerParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.Populated != nil {

		// query param populated
		var qrPopulated bool

		if o.Populated != nil {
			qrPopulated = *o.Populated
		}
		qPopulated := swag.FormatBool(qrPopulated)
		if qPopulated != "" {

			if err := r.SetQueryParam("populated", qPopulated); err != nil {
				return err
			}
		}
	}

	// path param triggerID
	if err := r.SetPathParam("triggerID", o.TriggerID); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
