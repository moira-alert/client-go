// Code generated by go-swagger; DO NOT EDIT.

package trigger

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
)

// NewDeleteTriggerThrottlingParams creates a new DeleteTriggerThrottlingParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewDeleteTriggerThrottlingParams() *DeleteTriggerThrottlingParams {
	return &DeleteTriggerThrottlingParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewDeleteTriggerThrottlingParamsWithTimeout creates a new DeleteTriggerThrottlingParams object
// with the ability to set a timeout on a request.
func NewDeleteTriggerThrottlingParamsWithTimeout(timeout time.Duration) *DeleteTriggerThrottlingParams {
	return &DeleteTriggerThrottlingParams{
		timeout: timeout,
	}
}

// NewDeleteTriggerThrottlingParamsWithContext creates a new DeleteTriggerThrottlingParams object
// with the ability to set a context for a request.
func NewDeleteTriggerThrottlingParamsWithContext(ctx context.Context) *DeleteTriggerThrottlingParams {
	return &DeleteTriggerThrottlingParams{
		Context: ctx,
	}
}

// NewDeleteTriggerThrottlingParamsWithHTTPClient creates a new DeleteTriggerThrottlingParams object
// with the ability to set a custom HTTPClient for a request.
func NewDeleteTriggerThrottlingParamsWithHTTPClient(client *http.Client) *DeleteTriggerThrottlingParams {
	return &DeleteTriggerThrottlingParams{
		HTTPClient: client,
	}
}

/*
DeleteTriggerThrottlingParams contains all the parameters to send to the API endpoint

	for the delete trigger throttling operation.

	Typically these are written to a http.Request.
*/
type DeleteTriggerThrottlingParams struct {

	/* TriggerID.

	   Trigger ID

	   Default: "bcba82f5-48cf-44c0-b7d6-e1d32c64a88c"
	*/
	TriggerID string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the delete trigger throttling params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *DeleteTriggerThrottlingParams) WithDefaults() *DeleteTriggerThrottlingParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the delete trigger throttling params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *DeleteTriggerThrottlingParams) SetDefaults() {
	var (
		triggerIDDefault = string("bcba82f5-48cf-44c0-b7d6-e1d32c64a88c")
	)

	val := DeleteTriggerThrottlingParams{
		TriggerID: triggerIDDefault,
	}

	val.timeout = o.timeout
	val.Context = o.Context
	val.HTTPClient = o.HTTPClient
	*o = val
}

// WithTimeout adds the timeout to the delete trigger throttling params
func (o *DeleteTriggerThrottlingParams) WithTimeout(timeout time.Duration) *DeleteTriggerThrottlingParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the delete trigger throttling params
func (o *DeleteTriggerThrottlingParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the delete trigger throttling params
func (o *DeleteTriggerThrottlingParams) WithContext(ctx context.Context) *DeleteTriggerThrottlingParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the delete trigger throttling params
func (o *DeleteTriggerThrottlingParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the delete trigger throttling params
func (o *DeleteTriggerThrottlingParams) WithHTTPClient(client *http.Client) *DeleteTriggerThrottlingParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the delete trigger throttling params
func (o *DeleteTriggerThrottlingParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithTriggerID adds the triggerID to the delete trigger throttling params
func (o *DeleteTriggerThrottlingParams) WithTriggerID(triggerID string) *DeleteTriggerThrottlingParams {
	o.SetTriggerID(triggerID)
	return o
}

// SetTriggerID adds the triggerId to the delete trigger throttling params
func (o *DeleteTriggerThrottlingParams) SetTriggerID(triggerID string) {
	o.TriggerID = triggerID
}

// WriteToRequest writes these params to a swagger request
func (o *DeleteTriggerThrottlingParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param triggerID
	if err := r.SetPathParam("triggerID", o.TriggerID); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
