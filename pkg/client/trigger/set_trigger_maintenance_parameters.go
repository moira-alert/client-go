// Code generated by go-swagger; DO NOT EDIT.

package trigger

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"

	"github.com/moira-alert/client-go/pkg/models"
)

// NewSetTriggerMaintenanceParams creates a new SetTriggerMaintenanceParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewSetTriggerMaintenanceParams() *SetTriggerMaintenanceParams {
	return &SetTriggerMaintenanceParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewSetTriggerMaintenanceParamsWithTimeout creates a new SetTriggerMaintenanceParams object
// with the ability to set a timeout on a request.
func NewSetTriggerMaintenanceParamsWithTimeout(timeout time.Duration) *SetTriggerMaintenanceParams {
	return &SetTriggerMaintenanceParams{
		timeout: timeout,
	}
}

// NewSetTriggerMaintenanceParamsWithContext creates a new SetTriggerMaintenanceParams object
// with the ability to set a context for a request.
func NewSetTriggerMaintenanceParamsWithContext(ctx context.Context) *SetTriggerMaintenanceParams {
	return &SetTriggerMaintenanceParams{
		Context: ctx,
	}
}

// NewSetTriggerMaintenanceParamsWithHTTPClient creates a new SetTriggerMaintenanceParams object
// with the ability to set a custom HTTPClient for a request.
func NewSetTriggerMaintenanceParamsWithHTTPClient(client *http.Client) *SetTriggerMaintenanceParams {
	return &SetTriggerMaintenanceParams{
		HTTPClient: client,
	}
}

/*
SetTriggerMaintenanceParams contains all the parameters to send to the API endpoint

	for the set trigger maintenance operation.

	Typically these are written to a http.Request.
*/
type SetTriggerMaintenanceParams struct {

	/* Body.

	   Maintenance data
	*/
	Body *models.DtoTriggerMaintenance

	/* TriggerID.

	   Trigger ID

	   Default: "bcba82f5-48cf-44c0-b7d6-e1d32c64a88c"
	*/
	TriggerID string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the set trigger maintenance params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *SetTriggerMaintenanceParams) WithDefaults() *SetTriggerMaintenanceParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the set trigger maintenance params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *SetTriggerMaintenanceParams) SetDefaults() {
	var (
		triggerIDDefault = string("bcba82f5-48cf-44c0-b7d6-e1d32c64a88c")
	)

	val := SetTriggerMaintenanceParams{
		TriggerID: triggerIDDefault,
	}

	val.timeout = o.timeout
	val.Context = o.Context
	val.HTTPClient = o.HTTPClient
	*o = val
}

// WithTimeout adds the timeout to the set trigger maintenance params
func (o *SetTriggerMaintenanceParams) WithTimeout(timeout time.Duration) *SetTriggerMaintenanceParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the set trigger maintenance params
func (o *SetTriggerMaintenanceParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the set trigger maintenance params
func (o *SetTriggerMaintenanceParams) WithContext(ctx context.Context) *SetTriggerMaintenanceParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the set trigger maintenance params
func (o *SetTriggerMaintenanceParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the set trigger maintenance params
func (o *SetTriggerMaintenanceParams) WithHTTPClient(client *http.Client) *SetTriggerMaintenanceParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the set trigger maintenance params
func (o *SetTriggerMaintenanceParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithBody adds the body to the set trigger maintenance params
func (o *SetTriggerMaintenanceParams) WithBody(body *models.DtoTriggerMaintenance) *SetTriggerMaintenanceParams {
	o.SetBody(body)
	return o
}

// SetBody adds the body to the set trigger maintenance params
func (o *SetTriggerMaintenanceParams) SetBody(body *models.DtoTriggerMaintenance) {
	o.Body = body
}

// WithTriggerID adds the triggerID to the set trigger maintenance params
func (o *SetTriggerMaintenanceParams) WithTriggerID(triggerID string) *SetTriggerMaintenanceParams {
	o.SetTriggerID(triggerID)
	return o
}

// SetTriggerID adds the triggerId to the set trigger maintenance params
func (o *SetTriggerMaintenanceParams) SetTriggerID(triggerID string) {
	o.TriggerID = triggerID
}

// WriteToRequest writes these params to a swagger request
func (o *SetTriggerMaintenanceParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error
	if o.Body != nil {
		if err := r.SetBodyParam(o.Body); err != nil {
			return err
		}
	}

	// path param triggerID
	if err := r.SetPathParam("triggerID", o.TriggerID); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
