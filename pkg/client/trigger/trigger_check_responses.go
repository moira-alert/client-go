// Code generated by go-swagger; DO NOT EDIT.

package trigger

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/moira-alert/client-go/pkg/models"
)

// TriggerCheckReader is a Reader for the TriggerCheck structure.
type TriggerCheckReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *TriggerCheckReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewTriggerCheckOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewTriggerCheckBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewTriggerCheckInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[PUT /trigger/check] trigger-check", response, response.Code())
	}
}

// NewTriggerCheckOK creates a TriggerCheckOK with default headers values
func NewTriggerCheckOK() *TriggerCheckOK {
	return &TriggerCheckOK{}
}

/*
TriggerCheckOK describes a response with status code 200, with default header values.

Validation is done, see response body for validation result
*/
type TriggerCheckOK struct {
	Payload *models.DtoTriggerCheckResponse
}

// IsSuccess returns true when this trigger check o k response has a 2xx status code
func (o *TriggerCheckOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this trigger check o k response has a 3xx status code
func (o *TriggerCheckOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this trigger check o k response has a 4xx status code
func (o *TriggerCheckOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this trigger check o k response has a 5xx status code
func (o *TriggerCheckOK) IsServerError() bool {
	return false
}

// IsCode returns true when this trigger check o k response a status code equal to that given
func (o *TriggerCheckOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the trigger check o k response
func (o *TriggerCheckOK) Code() int {
	return 200
}

func (o *TriggerCheckOK) Error() string {
	return fmt.Sprintf("[PUT /trigger/check][%d] triggerCheckOK  %+v", 200, o.Payload)
}

func (o *TriggerCheckOK) String() string {
	return fmt.Sprintf("[PUT /trigger/check][%d] triggerCheckOK  %+v", 200, o.Payload)
}

func (o *TriggerCheckOK) GetPayload() *models.DtoTriggerCheckResponse {
	return o.Payload
}

func (o *TriggerCheckOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.DtoTriggerCheckResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewTriggerCheckBadRequest creates a TriggerCheckBadRequest with default headers values
func NewTriggerCheckBadRequest() *TriggerCheckBadRequest {
	return &TriggerCheckBadRequest{}
}

/*
TriggerCheckBadRequest describes a response with status code 400, with default header values.

Bad request from client
*/
type TriggerCheckBadRequest struct {
	Payload *models.APIErrorInvalidRequestExample
}

// IsSuccess returns true when this trigger check bad request response has a 2xx status code
func (o *TriggerCheckBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this trigger check bad request response has a 3xx status code
func (o *TriggerCheckBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this trigger check bad request response has a 4xx status code
func (o *TriggerCheckBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this trigger check bad request response has a 5xx status code
func (o *TriggerCheckBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this trigger check bad request response a status code equal to that given
func (o *TriggerCheckBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the trigger check bad request response
func (o *TriggerCheckBadRequest) Code() int {
	return 400
}

func (o *TriggerCheckBadRequest) Error() string {
	return fmt.Sprintf("[PUT /trigger/check][%d] triggerCheckBadRequest  %+v", 400, o.Payload)
}

func (o *TriggerCheckBadRequest) String() string {
	return fmt.Sprintf("[PUT /trigger/check][%d] triggerCheckBadRequest  %+v", 400, o.Payload)
}

func (o *TriggerCheckBadRequest) GetPayload() *models.APIErrorInvalidRequestExample {
	return o.Payload
}

func (o *TriggerCheckBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIErrorInvalidRequestExample)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewTriggerCheckInternalServerError creates a TriggerCheckInternalServerError with default headers values
func NewTriggerCheckInternalServerError() *TriggerCheckInternalServerError {
	return &TriggerCheckInternalServerError{}
}

/*
TriggerCheckInternalServerError describes a response with status code 500, with default header values.

Internal server error
*/
type TriggerCheckInternalServerError struct {
	Payload *models.APIErrorInternalServerExample
}

// IsSuccess returns true when this trigger check internal server error response has a 2xx status code
func (o *TriggerCheckInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this trigger check internal server error response has a 3xx status code
func (o *TriggerCheckInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this trigger check internal server error response has a 4xx status code
func (o *TriggerCheckInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this trigger check internal server error response has a 5xx status code
func (o *TriggerCheckInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this trigger check internal server error response a status code equal to that given
func (o *TriggerCheckInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the trigger check internal server error response
func (o *TriggerCheckInternalServerError) Code() int {
	return 500
}

func (o *TriggerCheckInternalServerError) Error() string {
	return fmt.Sprintf("[PUT /trigger/check][%d] triggerCheckInternalServerError  %+v", 500, o.Payload)
}

func (o *TriggerCheckInternalServerError) String() string {
	return fmt.Sprintf("[PUT /trigger/check][%d] triggerCheckInternalServerError  %+v", 500, o.Payload)
}

func (o *TriggerCheckInternalServerError) GetPayload() *models.APIErrorInternalServerExample {
	return o.Payload
}

func (o *TriggerCheckInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIErrorInternalServerExample)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
