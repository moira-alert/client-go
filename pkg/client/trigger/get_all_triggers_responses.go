// Code generated by go-swagger; DO NOT EDIT.

package trigger

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/moira-alert/client-go/pkg/models"
)

// GetAllTriggersReader is a Reader for the GetAllTriggers structure.
type GetAllTriggersReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetAllTriggersReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetAllTriggersOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 422:
		result := NewGetAllTriggersUnprocessableEntity()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetAllTriggersInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /trigger] get-all-triggers", response, response.Code())
	}
}

// NewGetAllTriggersOK creates a GetAllTriggersOK with default headers values
func NewGetAllTriggersOK() *GetAllTriggersOK {
	return &GetAllTriggersOK{}
}

/*
GetAllTriggersOK describes a response with status code 200, with default header values.

Fetched all triggers
*/
type GetAllTriggersOK struct {
	Payload *models.DtoTriggersList
}

// IsSuccess returns true when this get all triggers o k response has a 2xx status code
func (o *GetAllTriggersOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get all triggers o k response has a 3xx status code
func (o *GetAllTriggersOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get all triggers o k response has a 4xx status code
func (o *GetAllTriggersOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get all triggers o k response has a 5xx status code
func (o *GetAllTriggersOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get all triggers o k response a status code equal to that given
func (o *GetAllTriggersOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get all triggers o k response
func (o *GetAllTriggersOK) Code() int {
	return 200
}

func (o *GetAllTriggersOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /trigger][%d] getAllTriggersOK %s", 200, payload)
}

func (o *GetAllTriggersOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /trigger][%d] getAllTriggersOK %s", 200, payload)
}

func (o *GetAllTriggersOK) GetPayload() *models.DtoTriggersList {
	return o.Payload
}

func (o *GetAllTriggersOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.DtoTriggersList)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAllTriggersUnprocessableEntity creates a GetAllTriggersUnprocessableEntity with default headers values
func NewGetAllTriggersUnprocessableEntity() *GetAllTriggersUnprocessableEntity {
	return &GetAllTriggersUnprocessableEntity{}
}

/*
GetAllTriggersUnprocessableEntity describes a response with status code 422, with default header values.

Render error
*/
type GetAllTriggersUnprocessableEntity struct {
	Payload *models.APIErrorRenderExample
}

// IsSuccess returns true when this get all triggers unprocessable entity response has a 2xx status code
func (o *GetAllTriggersUnprocessableEntity) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get all triggers unprocessable entity response has a 3xx status code
func (o *GetAllTriggersUnprocessableEntity) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get all triggers unprocessable entity response has a 4xx status code
func (o *GetAllTriggersUnprocessableEntity) IsClientError() bool {
	return true
}

// IsServerError returns true when this get all triggers unprocessable entity response has a 5xx status code
func (o *GetAllTriggersUnprocessableEntity) IsServerError() bool {
	return false
}

// IsCode returns true when this get all triggers unprocessable entity response a status code equal to that given
func (o *GetAllTriggersUnprocessableEntity) IsCode(code int) bool {
	return code == 422
}

// Code gets the status code for the get all triggers unprocessable entity response
func (o *GetAllTriggersUnprocessableEntity) Code() int {
	return 422
}

func (o *GetAllTriggersUnprocessableEntity) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /trigger][%d] getAllTriggersUnprocessableEntity %s", 422, payload)
}

func (o *GetAllTriggersUnprocessableEntity) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /trigger][%d] getAllTriggersUnprocessableEntity %s", 422, payload)
}

func (o *GetAllTriggersUnprocessableEntity) GetPayload() *models.APIErrorRenderExample {
	return o.Payload
}

func (o *GetAllTriggersUnprocessableEntity) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIErrorRenderExample)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAllTriggersInternalServerError creates a GetAllTriggersInternalServerError with default headers values
func NewGetAllTriggersInternalServerError() *GetAllTriggersInternalServerError {
	return &GetAllTriggersInternalServerError{}
}

/*
GetAllTriggersInternalServerError describes a response with status code 500, with default header values.

Internal server error
*/
type GetAllTriggersInternalServerError struct {
	Payload *models.APIErrorInternalServerExample
}

// IsSuccess returns true when this get all triggers internal server error response has a 2xx status code
func (o *GetAllTriggersInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get all triggers internal server error response has a 3xx status code
func (o *GetAllTriggersInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get all triggers internal server error response has a 4xx status code
func (o *GetAllTriggersInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get all triggers internal server error response has a 5xx status code
func (o *GetAllTriggersInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get all triggers internal server error response a status code equal to that given
func (o *GetAllTriggersInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the get all triggers internal server error response
func (o *GetAllTriggersInternalServerError) Code() int {
	return 500
}

func (o *GetAllTriggersInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /trigger][%d] getAllTriggersInternalServerError %s", 500, payload)
}

func (o *GetAllTriggersInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /trigger][%d] getAllTriggersInternalServerError %s", 500, payload)
}

func (o *GetAllTriggersInternalServerError) GetPayload() *models.APIErrorInternalServerExample {
	return o.Payload
}

func (o *GetAllTriggersInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIErrorInternalServerExample)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
