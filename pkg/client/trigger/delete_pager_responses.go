// Code generated by go-swagger; DO NOT EDIT.

package trigger

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/moira-alert/client-go/pkg/models"
)

// DeletePagerReader is a Reader for the DeletePager structure.
type DeletePagerReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeletePagerReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewDeletePagerOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 404:
		result := NewDeletePagerNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 422:
		result := NewDeletePagerUnprocessableEntity()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewDeletePagerInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[DELETE /trigger/search/pager] delete-pager", response, response.Code())
	}
}

// NewDeletePagerOK creates a DeletePagerOK with default headers values
func NewDeletePagerOK() *DeletePagerOK {
	return &DeletePagerOK{}
}

/*
DeletePagerOK describes a response with status code 200, with default header values.

Successfully deleted pager
*/
type DeletePagerOK struct {
	Payload *models.DtoTriggersSearchResultDeleteResponse
}

// IsSuccess returns true when this delete pager o k response has a 2xx status code
func (o *DeletePagerOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this delete pager o k response has a 3xx status code
func (o *DeletePagerOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete pager o k response has a 4xx status code
func (o *DeletePagerOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this delete pager o k response has a 5xx status code
func (o *DeletePagerOK) IsServerError() bool {
	return false
}

// IsCode returns true when this delete pager o k response a status code equal to that given
func (o *DeletePagerOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the delete pager o k response
func (o *DeletePagerOK) Code() int {
	return 200
}

func (o *DeletePagerOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /trigger/search/pager][%d] deletePagerOK %s", 200, payload)
}

func (o *DeletePagerOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /trigger/search/pager][%d] deletePagerOK %s", 200, payload)
}

func (o *DeletePagerOK) GetPayload() *models.DtoTriggersSearchResultDeleteResponse {
	return o.Payload
}

func (o *DeletePagerOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.DtoTriggersSearchResultDeleteResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeletePagerNotFound creates a DeletePagerNotFound with default headers values
func NewDeletePagerNotFound() *DeletePagerNotFound {
	return &DeletePagerNotFound{}
}

/*
DeletePagerNotFound describes a response with status code 404, with default header values.

Resource not found
*/
type DeletePagerNotFound struct {
	Payload *models.APIErrorNotFoundExample
}

// IsSuccess returns true when this delete pager not found response has a 2xx status code
func (o *DeletePagerNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete pager not found response has a 3xx status code
func (o *DeletePagerNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete pager not found response has a 4xx status code
func (o *DeletePagerNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete pager not found response has a 5xx status code
func (o *DeletePagerNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this delete pager not found response a status code equal to that given
func (o *DeletePagerNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the delete pager not found response
func (o *DeletePagerNotFound) Code() int {
	return 404
}

func (o *DeletePagerNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /trigger/search/pager][%d] deletePagerNotFound %s", 404, payload)
}

func (o *DeletePagerNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /trigger/search/pager][%d] deletePagerNotFound %s", 404, payload)
}

func (o *DeletePagerNotFound) GetPayload() *models.APIErrorNotFoundExample {
	return o.Payload
}

func (o *DeletePagerNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIErrorNotFoundExample)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeletePagerUnprocessableEntity creates a DeletePagerUnprocessableEntity with default headers values
func NewDeletePagerUnprocessableEntity() *DeletePagerUnprocessableEntity {
	return &DeletePagerUnprocessableEntity{}
}

/*
DeletePagerUnprocessableEntity describes a response with status code 422, with default header values.

Render error
*/
type DeletePagerUnprocessableEntity struct {
	Payload *models.APIErrorRenderExample
}

// IsSuccess returns true when this delete pager unprocessable entity response has a 2xx status code
func (o *DeletePagerUnprocessableEntity) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete pager unprocessable entity response has a 3xx status code
func (o *DeletePagerUnprocessableEntity) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete pager unprocessable entity response has a 4xx status code
func (o *DeletePagerUnprocessableEntity) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete pager unprocessable entity response has a 5xx status code
func (o *DeletePagerUnprocessableEntity) IsServerError() bool {
	return false
}

// IsCode returns true when this delete pager unprocessable entity response a status code equal to that given
func (o *DeletePagerUnprocessableEntity) IsCode(code int) bool {
	return code == 422
}

// Code gets the status code for the delete pager unprocessable entity response
func (o *DeletePagerUnprocessableEntity) Code() int {
	return 422
}

func (o *DeletePagerUnprocessableEntity) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /trigger/search/pager][%d] deletePagerUnprocessableEntity %s", 422, payload)
}

func (o *DeletePagerUnprocessableEntity) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /trigger/search/pager][%d] deletePagerUnprocessableEntity %s", 422, payload)
}

func (o *DeletePagerUnprocessableEntity) GetPayload() *models.APIErrorRenderExample {
	return o.Payload
}

func (o *DeletePagerUnprocessableEntity) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIErrorRenderExample)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeletePagerInternalServerError creates a DeletePagerInternalServerError with default headers values
func NewDeletePagerInternalServerError() *DeletePagerInternalServerError {
	return &DeletePagerInternalServerError{}
}

/*
DeletePagerInternalServerError describes a response with status code 500, with default header values.

Internal server error
*/
type DeletePagerInternalServerError struct {
	Payload *models.APIErrorInternalServerExample
}

// IsSuccess returns true when this delete pager internal server error response has a 2xx status code
func (o *DeletePagerInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete pager internal server error response has a 3xx status code
func (o *DeletePagerInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete pager internal server error response has a 4xx status code
func (o *DeletePagerInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this delete pager internal server error response has a 5xx status code
func (o *DeletePagerInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this delete pager internal server error response a status code equal to that given
func (o *DeletePagerInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the delete pager internal server error response
func (o *DeletePagerInternalServerError) Code() int {
	return 500
}

func (o *DeletePagerInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /trigger/search/pager][%d] deletePagerInternalServerError %s", 500, payload)
}

func (o *DeletePagerInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /trigger/search/pager][%d] deletePagerInternalServerError %s", 500, payload)
}

func (o *DeletePagerInternalServerError) GetPayload() *models.APIErrorInternalServerExample {
	return o.Payload
}

func (o *DeletePagerInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIErrorInternalServerExample)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
