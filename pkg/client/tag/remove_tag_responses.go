// Code generated by go-swagger; DO NOT EDIT.

package tag

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/moira-alert/client-go/pkg/models"
)

// RemoveTagReader is a Reader for the RemoveTag structure.
type RemoveTagReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *RemoveTagReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewRemoveTagOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewRemoveTagBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 422:
		result := NewRemoveTagUnprocessableEntity()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewRemoveTagInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[DELETE /tag/{tag}] remove-tag", response, response.Code())
	}
}

// NewRemoveTagOK creates a RemoveTagOK with default headers values
func NewRemoveTagOK() *RemoveTagOK {
	return &RemoveTagOK{}
}

/*
RemoveTagOK describes a response with status code 200, with default header values.

Tag removed successfully
*/
type RemoveTagOK struct {
	Payload *models.DtoMessageResponse
}

// IsSuccess returns true when this remove tag o k response has a 2xx status code
func (o *RemoveTagOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this remove tag o k response has a 3xx status code
func (o *RemoveTagOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this remove tag o k response has a 4xx status code
func (o *RemoveTagOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this remove tag o k response has a 5xx status code
func (o *RemoveTagOK) IsServerError() bool {
	return false
}

// IsCode returns true when this remove tag o k response a status code equal to that given
func (o *RemoveTagOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the remove tag o k response
func (o *RemoveTagOK) Code() int {
	return 200
}

func (o *RemoveTagOK) Error() string {
	return fmt.Sprintf("[DELETE /tag/{tag}][%d] removeTagOK  %+v", 200, o.Payload)
}

func (o *RemoveTagOK) String() string {
	return fmt.Sprintf("[DELETE /tag/{tag}][%d] removeTagOK  %+v", 200, o.Payload)
}

func (o *RemoveTagOK) GetPayload() *models.DtoMessageResponse {
	return o.Payload
}

func (o *RemoveTagOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.DtoMessageResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewRemoveTagBadRequest creates a RemoveTagBadRequest with default headers values
func NewRemoveTagBadRequest() *RemoveTagBadRequest {
	return &RemoveTagBadRequest{}
}

/*
RemoveTagBadRequest describes a response with status code 400, with default header values.

Bad request from client
*/
type RemoveTagBadRequest struct {
	Payload *models.APIErrorInvalidRequestExample
}

// IsSuccess returns true when this remove tag bad request response has a 2xx status code
func (o *RemoveTagBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this remove tag bad request response has a 3xx status code
func (o *RemoveTagBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this remove tag bad request response has a 4xx status code
func (o *RemoveTagBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this remove tag bad request response has a 5xx status code
func (o *RemoveTagBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this remove tag bad request response a status code equal to that given
func (o *RemoveTagBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the remove tag bad request response
func (o *RemoveTagBadRequest) Code() int {
	return 400
}

func (o *RemoveTagBadRequest) Error() string {
	return fmt.Sprintf("[DELETE /tag/{tag}][%d] removeTagBadRequest  %+v", 400, o.Payload)
}

func (o *RemoveTagBadRequest) String() string {
	return fmt.Sprintf("[DELETE /tag/{tag}][%d] removeTagBadRequest  %+v", 400, o.Payload)
}

func (o *RemoveTagBadRequest) GetPayload() *models.APIErrorInvalidRequestExample {
	return o.Payload
}

func (o *RemoveTagBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIErrorInvalidRequestExample)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewRemoveTagUnprocessableEntity creates a RemoveTagUnprocessableEntity with default headers values
func NewRemoveTagUnprocessableEntity() *RemoveTagUnprocessableEntity {
	return &RemoveTagUnprocessableEntity{}
}

/*
RemoveTagUnprocessableEntity describes a response with status code 422, with default header values.

Render error
*/
type RemoveTagUnprocessableEntity struct {
	Payload *models.APIErrorRenderExample
}

// IsSuccess returns true when this remove tag unprocessable entity response has a 2xx status code
func (o *RemoveTagUnprocessableEntity) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this remove tag unprocessable entity response has a 3xx status code
func (o *RemoveTagUnprocessableEntity) IsRedirect() bool {
	return false
}

// IsClientError returns true when this remove tag unprocessable entity response has a 4xx status code
func (o *RemoveTagUnprocessableEntity) IsClientError() bool {
	return true
}

// IsServerError returns true when this remove tag unprocessable entity response has a 5xx status code
func (o *RemoveTagUnprocessableEntity) IsServerError() bool {
	return false
}

// IsCode returns true when this remove tag unprocessable entity response a status code equal to that given
func (o *RemoveTagUnprocessableEntity) IsCode(code int) bool {
	return code == 422
}

// Code gets the status code for the remove tag unprocessable entity response
func (o *RemoveTagUnprocessableEntity) Code() int {
	return 422
}

func (o *RemoveTagUnprocessableEntity) Error() string {
	return fmt.Sprintf("[DELETE /tag/{tag}][%d] removeTagUnprocessableEntity  %+v", 422, o.Payload)
}

func (o *RemoveTagUnprocessableEntity) String() string {
	return fmt.Sprintf("[DELETE /tag/{tag}][%d] removeTagUnprocessableEntity  %+v", 422, o.Payload)
}

func (o *RemoveTagUnprocessableEntity) GetPayload() *models.APIErrorRenderExample {
	return o.Payload
}

func (o *RemoveTagUnprocessableEntity) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIErrorRenderExample)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewRemoveTagInternalServerError creates a RemoveTagInternalServerError with default headers values
func NewRemoveTagInternalServerError() *RemoveTagInternalServerError {
	return &RemoveTagInternalServerError{}
}

/*
RemoveTagInternalServerError describes a response with status code 500, with default header values.

Internal server error
*/
type RemoveTagInternalServerError struct {
	Payload *models.APIErrorInternalServerExample
}

// IsSuccess returns true when this remove tag internal server error response has a 2xx status code
func (o *RemoveTagInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this remove tag internal server error response has a 3xx status code
func (o *RemoveTagInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this remove tag internal server error response has a 4xx status code
func (o *RemoveTagInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this remove tag internal server error response has a 5xx status code
func (o *RemoveTagInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this remove tag internal server error response a status code equal to that given
func (o *RemoveTagInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the remove tag internal server error response
func (o *RemoveTagInternalServerError) Code() int {
	return 500
}

func (o *RemoveTagInternalServerError) Error() string {
	return fmt.Sprintf("[DELETE /tag/{tag}][%d] removeTagInternalServerError  %+v", 500, o.Payload)
}

func (o *RemoveTagInternalServerError) String() string {
	return fmt.Sprintf("[DELETE /tag/{tag}][%d] removeTagInternalServerError  %+v", 500, o.Payload)
}

func (o *RemoveTagInternalServerError) GetPayload() *models.APIErrorInternalServerExample {
	return o.Payload
}

func (o *RemoveTagInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIErrorInternalServerExample)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
